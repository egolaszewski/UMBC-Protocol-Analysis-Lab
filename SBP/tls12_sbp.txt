(herald
  "Session Binding Protocol with TLS 1.2 (uses the modified server as implemented and tested in the paper and the cookie authentication model (ca.scm) which showed the cookie stealing attack)."
  (bound 12))

(comment "CPSA 4.4.2")
(comment "All input read from tls12_sbp.scm")
(comment "Strand count bounded at 12")

(defprotocol ca basic
  (defrole clienta
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie any mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write"))) (load cookiestor any)
      (stor cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (defrole clientr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    (gen-st (cat "client store" u s cookie)))
  (defrole servera
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie data) (ppk skey) (any mesg) (authstor locn)
      (request httpreq) (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))) (load authstor any)
      (stor authstor (cat "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (uniq-orig cookie)
    (facts (neq u s)))
  (defrole serverr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie data) (ppk skey) (authstor locn) (request httpreq)
      (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat "server store" s u cookie))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (facts (neq u s))
    (gen-st (cat "server store" s u cookie)))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-servera-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "servera" z (idx 5)) (p "servera" "s" z s)
          (p "servera" "u" z u)) (fact neq u s))))
  (defgenrule fact-serverr-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "s" z s)
          (p "serverr" "u" z u)) (fact neq u s))))
  (defgenrule trRl_clienta-at-7
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_clienta-at-6
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 6)))))
  (defgenrule trRl_servera-at-7
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_servera-at-6
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 6)))))
  (defgenrule gen-st-clientr-0
    (forall ((z strd) (cookie mesg) (s u name))
      (implies
        (and (p "clientr" z (idx 5)) (p "clientr" "cookie" z cookie)
          (p "clientr" "s" z s) (p "clientr" "u" z u))
        (gen-st (cat "client store" u s cookie)))))
  (defgenrule gen-st-serverr-0
    (forall ((z strd) (cookie data) (u s name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "cookie" z cookie)
          (p "serverr" "u" z u) (p "serverr" "s" z s))
        (gen-st (cat "server store" s u cookie)))))
  (lang (random32 atom) (random48 atom) (password atom) (httpreq atom)
    (httpdata atom)))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (label 0)
  (unrealized (0 1) (0 3) (0 5) (0 9))
  (origs (pt-0 (0 7)) (cr (0 0)) (pms (0 2)))
  (comment "Not closed under rules"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (label 1)
  (parent 0)
  (unrealized (0 1) (0 3) (0 5) (0 9))
  (origs (pt-0 (0 7)) (cr (0 0)) (pms (0 2)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (precedes ((1 1) (0 1)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-strand serverr 2)
    (enc (hash s spk) (privk ca)) (0 1))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca))))))
  (label 2)
  (parent 1)
  (unrealized (0 3) (0 5) (0 9))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (displaced 1 2 serverr 4)
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (0 3))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))))
  (label 3)
  (parent 2)
  (unrealized (0 5) (0 9))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-strand serverr 4)
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (0 3))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))))
  (label 4)
  (parent 2)
  (unrealized (0 5) (0 9))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((1 1) (0 1)) ((2 1) (0 3)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (0 3))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 5)
  (parent 2)
  (unrealized (0 3) (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr random32) (pms random48) (ppk skey)
    (spk akey) (u u-0 s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u-0) (s s) (ca ca))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3))
    ((1 5) (0 5)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u-0 s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (displaced 1 2 servera 6)
    (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
      (hash (hash pms cr sr) "server_write")) (0 5))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))))
  (label 6)
  (parent 3)
  (unrealized (0 9) (1 4))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3))
    ((2 1) (0 5)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc "login-successful" cookie
      (hash (hash pms cr sr) "server_write")) (0 5))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 7)
  (parent 3)
  (unrealized (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr cr-0 sr-0 random32) (pms random48)
    (ppk skey) (spk akey) (u u-0 s ca name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u-0) (s s) (ca ca))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)) ((2 5) (0 5)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u-0 s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (displaced 2 3 servera 6)
    (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
      (hash (hash pms cr sr) "server_write")) (0 5))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))))
  (label 8)
  (parent 4)
  (unrealized (0 9) (2 4))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)) ((3 1) (0 5)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc "login-successful" cookie
      (hash (hash pms cr sr) "server_write")) (0 5))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 9)
  (parent 4)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((1 1) (0 1)) ((2 1) (0 3)) ((3 1) (2 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (2 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 10)
  (parent 5)
  (unrealized (0 3) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u) (s s) (ca ca))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((1 1) (0 1))
    ((1 3) (0 3)) ((1 5) (0 5)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (displaced 2 0 clienta 5)
    (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")) (1 4))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))))
  (label 11)
  (parent 6)
  (unrealized (0 9))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr random32) (pms random48) (ppk skey)
    (spk akey) (u u-0 s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u-0) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3))
    ((1 5) (0 5)) ((2 1) (1 4)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u-0 s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "client_write"))
    (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")) (1 4))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write"))))
  (label 12)
  (parent 6)
  (unrealized (0 9) (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3))
    ((2 1) (0 5)) ((3 1) (2 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (2 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 13)
  (parent 7)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey)
    (spk akey) (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 6 (cookie cookie) (p p) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u) (s s) (ca ca))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 4) (2 4)) ((1 1) (0 1))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (displaced 3 0 clienta 5)
    (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")) (2 4))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))))
  (label 14)
  (parent 8)
  (unrealized (0 9))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr cr-0 sr-0 random32) (pms random48)
    (ppk skey) (spk akey) (u u-0 s ca name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u-0) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)) ((2 5) (0 5)) ((3 1) (2 4)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u-0 s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "client_write"))
    (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")) (2 4))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write"))))
  (label 15)
  (parent 8)
  (unrealized (0 9) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)) ((3 1) (0 5)) ((4 1) (3 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 16)
  (parent 9)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 2) (4 0)) ((1 1) (0 1)) ((2 1) (0 3)) ((3 1) (2 0))
    ((4 1) (3 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 17)
  (parent 10)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request-0) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((1 1) (0 1))
    ((1 3) (0 3)) ((1 5) (0 5)) ((1 9) (0 9)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test (displaced 1 2 servera 10)
    (enc response (hash (hash pms cr sr) "server_write")) (0 9))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (label 18)
  (parent 11)
  (unrealized (1 8))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((1 1) (0 1))
    ((1 3) (0 3)) ((1 5) (0 5)) ((2 1) (0 9)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc response (hash (hash pms cr sr) "server_write")) (0 9))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 19)
  (parent 11)
  (unrealized (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr random32) (pms random48) (ppk skey)
    (spk akey) (u u-0 s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u-0) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3))
    ((1 5) (0 5)) ((2 1) (1 4)) ((3 1) (2 0)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u-0 s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "client_write"))
    (hash (hash pms cr sr) "client_write") (2 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write"))))
  (label 20)
  (parent 12)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (4 0)) ((1 1) (0 1))
    ((1 3) (0 3)) ((2 1) (0 5)) ((3 1) (2 0)) ((4 1) (3 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 21)
  (parent 13)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr cr-0 sr-0 random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request-0) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 4) (2 4)) ((1 1) (0 1))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5)) ((2 9) (0 9)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test (displaced 2 3 servera 10)
    (enc response (hash (hash pms cr sr) "server_write")) (0 9))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (label 22)
  (parent 14)
  (unrealized (2 8))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey)
    (spk akey) (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 6 (cookie cookie) (p p) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 4) (2 4)) ((1 1) (0 1))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5)) ((3 1) (0 9)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc response (hash (hash pms cr sr) "server_write")) (0 9))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 23)
  (parent 14)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr cr-0 sr-0 random32) (pms random48)
    (ppk skey) (spk akey) (u u-0 s ca name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u-0) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)) ((2 5) (0 5)) ((3 1) (2 4)) ((4 1) (3 0)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u-0 s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "client_write"))
    (hash (hash pms cr sr) "client_write") (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write"))))
  (label 24)
  (parent 15)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 2) (5 0)) ((1 1) (0 1))
    ((2 1) (0 1)) ((2 3) (0 3)) ((3 1) (0 5)) ((4 1) (3 0))
    ((5 1) (4 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (4 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 25)
  (parent 16)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request httpreq) (p password) (cr sr random32) (pms random48)
    (ppk skey) (spk akey) (u s ca name) (pt pt-0 pt-1 pt-2 pval)
    (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 8) (1 8))
    ((1 1) (0 1)) ((1 3) (0 3)) ((1 5) (0 5)) ((1 9) (0 9)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test (displaced 2 0 clienta 9)
    (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
      (hash (hash pms cr sr) "client_write")) (1 8))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (label 26)
  (parent 18)
  (realized)
  (shape)
  (maps
    ((0)
      ((u u) (s s) (ca ca) (spk spk) (p p) (cr cr) (sr sr) (pms pms)
        (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
        (cookiestor cookiestor) (request request) (response response))))
  (origs (pt-0 (0 7)) (cookie (1 5)) (pt-2 (1 7)) (cr (0 0)) (pms (0 2))
    (sr (1 1))))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request-0) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((1 1) (0 1))
    ((1 3) (0 3)) ((1 5) (0 5)) ((1 9) (0 9)) ((2 1) (1 8)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "client_write"))
    (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
      (hash (hash pms cr sr) "client_write")) (1 8))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write"))))
  (label 27)
  (parent 18)
  (unrealized (1 8) (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((1 1) (0 1))
    ((1 3) (0 3)) ((1 5) (0 5)) ((2 1) (0 9)) ((3 1) (2 0)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (2 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 28)
  (parent 19)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr random32) (pms random48) (ppk skey)
    (spk akey) (u u-0 s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u-0) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (4 0)) ((1 1) (0 1))
    ((1 3) (0 3)) ((1 5) (0 5)) ((2 1) (1 4)) ((3 1) (2 0))
    ((4 1) (3 0)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u-0 s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 29)
  (parent 20)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request httpreq) (p password) (cr sr cr-0 sr-0 random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 4) (2 4)) ((0 8) (2 8))
    ((1 1) (0 1)) ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5))
    ((2 9) (0 9)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test (displaced 3 0 clienta 9)
    (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
      (hash (hash pms cr sr) "client_write")) (2 8))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (label 30)
  (parent 22)
  (seen 26)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr cr-0 sr-0 random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request-0) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 4) (2 4)) ((1 1) (0 1))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5)) ((2 9) (0 9))
    ((3 1) (2 8)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "client_write"))
    (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
      (hash (hash pms cr sr) "client_write")) (2 8))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write"))))
  (label 31)
  (parent 22)
  (unrealized (2 8) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey)
    (spk akey) (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 6 (cookie cookie) (p p) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 4) (2 4)) ((1 1) (0 1))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5)) ((3 1) (0 9))
    ((4 1) (3 0)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 32)
  (parent 23)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr cr-0 sr-0 random32) (pms random48)
    (ppk skey) (spk akey) (u u-0 s ca name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u-0) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 2) (5 0)) ((1 1) (0 1))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5)) ((3 1) (2 4))
    ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u-0 s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (4 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 33)
  (parent 24)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request-0) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((1 1) (0 1))
    ((1 3) (0 3)) ((1 5) (0 5)) ((1 9) (0 9)) ((2 1) (1 8))
    ((3 1) (2 0)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "client_write"))
    (hash (hash pms cr sr) "client_write") (2 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write"))))
  (label 34)
  (parent 27)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (4 0)) ((0 4) (1 4))
    ((1 1) (0 1)) ((1 3) (0 3)) ((1 5) (0 5)) ((2 1) (0 9))
    ((3 1) (2 0)) ((4 1) (3 0)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 35)
  (parent 28)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr cr-0 sr-0 random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request-0) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 4) (2 4)) ((1 1) (0 1))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5)) ((2 9) (0 9))
    ((3 1) (2 8)) ((4 1) (3 0)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "client_write"))
    (hash (hash pms cr sr) "client_write") (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write"))))
  (label 36)
  (parent 31)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey)
    (spk akey) (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 6 (cookie cookie) (p p) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 2) (5 0)) ((0 4) (2 4))
    ((1 1) (0 1)) ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5))
    ((3 1) (0 9)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (4 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 37)
  (parent 32)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request-0) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (4 0)) ((0 4) (1 4))
    ((1 1) (0 1)) ((1 3) (0 3)) ((1 5) (0 5)) ((1 9) (0 9))
    ((2 1) (1 8)) ((3 1) (2 0)) ((4 1) (3 0)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 38)
  (parent 34)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr cr-0 sr-0 random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request-0) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 2) (5 0)) ((0 4) (2 4))
    ((1 1) (0 1)) ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5))
    ((2 9) (0 9)) ((3 1) (2 8)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig ppk (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (4 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 39)
  (parent 36)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(comment "Nothing left to do")

(defprotocol ca basic
  (defrole clienta
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie any mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write"))) (load cookiestor any)
      (stor cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (defrole clientr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    (gen-st (cat "client store" u s cookie)))
  (defrole servera
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie data) (ppk skey) (any mesg) (authstor locn)
      (request httpreq) (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))) (load authstor any)
      (stor authstor (cat "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (uniq-orig cookie)
    (facts (neq u s)))
  (defrole serverr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie data) (ppk skey) (authstor locn) (request httpreq)
      (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat "server store" s u cookie))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (facts (neq u s))
    (gen-st (cat "server store" s u cookie)))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-servera-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "servera" z (idx 5)) (p "servera" "s" z s)
          (p "servera" "u" z u)) (fact neq u s))))
  (defgenrule fact-serverr-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "s" z s)
          (p "serverr" "u" z u)) (fact neq u s))))
  (defgenrule trRl_clienta-at-7
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_clienta-at-6
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 6)))))
  (defgenrule trRl_servera-at-7
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_servera-at-6
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 6)))))
  (defgenrule gen-st-clientr-0
    (forall ((z strd) (cookie mesg) (s u name))
      (implies
        (and (p "clientr" z (idx 5)) (p "clientr" "cookie" z cookie)
          (p "clientr" "s" z s) (p "clientr" "u" z u))
        (gen-st (cat "client store" u s cookie)))))
  (defgenrule gen-st-serverr-0
    (forall ((z strd) (cookie data) (u s name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "cookie" z cookie)
          (p "serverr" "u" z u) (p "serverr" "s" z s))
        (gen-st (cat "server store" s u cookie)))))
  (lang (random32 atom) (random48 atom) (password atom) (httpreq atom)
    (httpdata atom)))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (deflistener cookie)
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cookie) (send cookie)))
  (label 40)
  (unrealized (0 1) (0 3) (0 5) (0 9))
  (origs (pt-0 (0 7)) (cr (0 0)) (pms (0 2)))
  (comment "Not closed under rules"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (deflistener cookie)
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cookie) (send cookie)))
  (label 41)
  (parent 40)
  (unrealized (0 1) (0 3) (0 5) (0 9))
  (origs (pt-0 (0 7)) (cr (0 0)) (pms (0 2)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (deflistener cookie)
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (precedes ((2 1) (0 1)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-strand serverr 2)
    (enc (hash s spk) (privk ca)) (0 1))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cookie) (send cookie))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca))))))
  (label 42)
  (parent 41)
  (unrealized (0 3) (0 5) (0 9))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (deflistener cookie)
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((2 1) (0 1)) ((2 3) (0 3)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (displaced 2 3 serverr 4)
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (0 3))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cookie) (send cookie))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))))
  (label 43)
  (parent 42)
  (unrealized (0 5) (0 9))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (deflistener cookie)
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((2 1) (0 1)) ((3 1) (0 1))
    ((3 3) (0 3)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-strand serverr 4)
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (0 3))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cookie) (send cookie))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))))
  (label 44)
  (parent 42)
  (unrealized (0 5) (0 9))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (deflistener cookie)
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((2 1) (0 1)) ((3 1) (0 3)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (0 3))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cookie) (send cookie))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 45)
  (parent 42)
  (unrealized (0 3) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (deflistener cookie)
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((2 1) (0 1)) ((2 3) (0 3))
    ((3 1) (0 5)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc "login-successful" cookie
      (hash (hash pms cr sr) "server_write")) (0 5))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cookie) (send cookie))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 46)
  (parent 43)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (deflistener cookie)
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((2 1) (0 1)) ((3 1) (0 1))
    ((3 3) (0 3)) ((4 1) (0 5)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc "login-successful" cookie
      (hash (hash pms cr sr) "server_write")) (0 5))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cookie) (send cookie))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 47)
  (parent 44)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (deflistener cookie)
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((2 1) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cookie) (send cookie))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 48)
  (parent 45)
  (unrealized (0 3) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (deflistener cookie)
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((2 1) (0 1)) ((2 3) (0 3))
    ((3 1) (0 5)) ((4 1) (3 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cookie) (send cookie))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 49)
  (parent 46)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (deflistener cookie)
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((2 1) (0 1)) ((3 1) (0 1))
    ((3 3) (0 3)) ((4 1) (0 5)) ((5 1) (4 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (4 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cookie) (send cookie))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 50)
  (parent 47)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (deflistener cookie)
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 2) (5 0)) ((2 1) (0 1)) ((3 1) (0 3)) ((4 1) (3 0))
    ((5 1) (4 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (4 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cookie) (send cookie))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 51)
  (parent 48)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (deflistener cookie)
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 2) (5 0)) ((2 1) (0 1))
    ((2 3) (0 3)) ((3 1) (0 5)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (4 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cookie) (send cookie))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 52)
  (parent 49)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (deflistener cookie)
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((0 2) (6 0)) ((2 1) (0 1))
    ((3 1) (0 1)) ((3 3) (0 3)) ((4 1) (0 5)) ((5 1) (4 0))
    ((6 1) (5 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (5 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cookie) (send cookie))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 53)
  (parent 50)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(comment "Nothing left to do")

(defprotocol ca basic
  (defrole clienta
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie any mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write"))) (load cookiestor any)
      (stor cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (defrole clientr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    (gen-st (cat "client store" u s cookie)))
  (defrole servera
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie data) (ppk skey) (any mesg) (authstor locn)
      (request httpreq) (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))) (load authstor any)
      (stor authstor (cat "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (uniq-orig cookie)
    (facts (neq u s)))
  (defrole serverr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie data) (ppk skey) (authstor locn) (request httpreq)
      (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat "server store" s u cookie))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (facts (neq u s))
    (gen-st (cat "server store" s u cookie)))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-servera-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "servera" z (idx 5)) (p "servera" "s" z s)
          (p "servera" "u" z u)) (fact neq u s))))
  (defgenrule fact-serverr-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "s" z s)
          (p "serverr" "u" z u)) (fact neq u s))))
  (defgenrule trRl_clienta-at-7
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_clienta-at-6
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 6)))))
  (defgenrule trRl_servera-at-7
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_servera-at-6
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 6)))))
  (defgenrule gen-st-clientr-0
    (forall ((z strd) (cookie mesg) (s u name))
      (implies
        (and (p "clientr" z (idx 5)) (p "clientr" "cookie" z cookie)
          (p "clientr" "s" z s) (p "clientr" "u" z u))
        (gen-st (cat "client store" u s cookie)))))
  (defgenrule gen-st-serverr-0
    (forall ((z strd) (cookie data) (u s name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "cookie" z cookie)
          (p "serverr" "u" z u) (p "serverr" "s" z s))
        (gen-st (cat "server store" s u cookie)))))
  (lang (random32 atom) (random48 atom) (password atom) (httpreq atom)
    (httpdata atom)))

(defskeleton ca
  (vars (cookie mesg) (response httpdata) (request httpreq)
    (cr sr random32) (pms random48) (spk akey) (s ca u name) (pt pval)
    (cookiestor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (label 54)
  (unrealized (0 1) (0 3) (0 6))
  (origs (cr (0 0)) (pms (0 2)))
  (comment "Not closed under rules"))

(defskeleton ca
  (vars (cookie mesg) (response httpdata) (request httpreq)
    (cr sr random32) (pms random48) (spk akey) (s ca u name) (pt pval)
    (cookiestor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (rule gen-st-clientr-0)
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (label 55)
  (parent 54)
  (unrealized (0 1) (0 3) (0 4) (0 6))
  (origs (cr (0 0)) (pms (0 2)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie mesg) (response httpdata) (request httpreq)
    (cr sr cr-0 sr-0 random32) (pms random48) (spk akey) (s ca u name)
    (pt pval) (cookiestor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (precedes ((1 1) (0 1)))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (operation encryption-test (added-strand serverr 2)
    (enc (hash s spk) (privk ca)) (0 1))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca))))))
  (label 56)
  (parent 55)
  (unrealized (0 3) (0 4) (0 6))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton ca
  (vars (cookie mesg) (response httpdata) (request httpreq)
    (cr sr random32) (pms random48) (spk akey) (s ca u name) (pt pval)
    (cookiestor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3)))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (operation encryption-test (displaced 1 2 serverr 4)
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (0 3))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))))
  (label 57)
  (parent 56)
  (unrealized (0 4) (0 6))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie mesg) (response httpdata) (request httpreq)
    (cr sr cr-0 sr-0 random32) (pms random48) (spk akey) (s ca u name)
    (pt pval) (cookiestor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (operation encryption-test (added-strand serverr 4)
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (0 3))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))))
  (label 58)
  (parent 56)
  (unrealized (0 4) (0 6))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie mesg) (response httpdata) (request httpreq)
    (cr sr cr-0 sr-0 random32) (pms random48) (spk akey) (s ca u name)
    (pt pval) (cookiestor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((1 1) (0 1)) ((2 1) (0 3)))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (0 3))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 59)
  (parent 56)
  (unrealized (0 3) (0 4) (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms pms-0 random48)
    (spk spk-0 akey) (s ca u ca-0 name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-0)
    (sr sr-0) (pms pms-0) (spk spk-0) (u u) (s s) (ca ca-0)
    (cookiestor cookiestor))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3))
    ((2 7) (0 4)))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (leads-to ((2 7) (0 4)))
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation channel-test (added-strand clienta 8)
    (ch-msg cookiestor (cat pt "client store" u s cookie)) (0 4))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((send cr-0)
      (recv (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms-0 spk-0)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms-0 spk-0)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms-0 spk-0)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms-0 spk-0)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie))))
  (label 60)
  (parent 57)
  (unrealized (0 6))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 cr-1 sr-1 random32)
    (pms pms-0 random48) (spk spk-0 akey) (s ca u ca-0 name)
    (pt pt-0 pval) (cookiestor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-1)
    (sr sr-1) (pms pms-0) (spk spk-0) (u u) (s s) (ca ca-0)
    (cookiestor cookiestor))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)) ((3 7) (0 4)))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (leads-to ((3 7) (0 4)))
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation channel-test (added-strand clienta 8)
    (ch-msg cookiestor (cat pt "client store" u s cookie)) (0 4))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((send cr-1)
      (recv (cat sr-1 s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms-0 spk-0)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms-0 spk-0)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms-0 spk-0)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms-0 spk-0)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie))))
  (label 61)
  (parent 58)
  (unrealized (0 6))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton ca
  (vars (cookie mesg) (response httpdata) (request httpreq)
    (cr sr cr-0 sr-0 random32) (pms random48) (spk akey) (s ca u name)
    (pt pval) (cookiestor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((1 1) (0 1)) ((2 1) (0 3)) ((3 1) (2 0)))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (2 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 62)
  (parent 59)
  (unrealized (0 3) (0 4) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any any-0 mesg) (cookie-0 data) (response httpdata)
    (request request-0 httpreq) (p p-0 password)
    (cr sr cr-0 sr-0 random32) (pms pms-0 random48) (ppk skey)
    (spk spk-0 akey) (u ca u-0 s ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk-0) (u u) (s s)
    (ca ca-0) (cookiestor cookiestor))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-0)
    (sr sr-0) (pms pms-0) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie-0)
    (response response) (request request-0) (p p-0) (cr cr) (sr sr)
    (pms pms) (ppk ppk) (spk spk-0) (u u-0) (s s) (ca ca-0)
    (authstor authstor))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 7) (0 4)) ((2 1) (0 1))
    ((2 3) (0 3)) ((2 9) (0 6)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cookie-0 cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (facts (neq u-0 s))
  (leads-to ((1 7) (0 4)))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test (displaced 1 3 servera 10)
    (enc response (hash (hash pms cr sr) "server_write")) (0 6))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((send cr-0) (recv (cat sr-0 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful"
          (enc cookie-0 (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u-0 cookie-0))
      (recv
        (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (label 63)
  (parent 60)
  (unrealized (2 4) (2 8))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (cookie-0 data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr cr-0 sr-0 random32)
    (pms pms-0 random48) (ppk skey) (spk spk-0 akey)
    (u ca u-0 s ca-0 name) (pt pt-0 pt-1 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk-0) (u u) (s s)
    (ca ca-0) (cookiestor cookiestor))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-0)
    (sr sr-0) (pms pms-0) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor))
  (defstrand serverr 7 (cookie cookie-0) (response response)
    (request request-0) (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk-0)
    (u u-0) (s s) (ca ca-0) (authstor authstor))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 7) (0 4)) ((2 1) (0 1))
    ((2 3) (0 3)) ((2 6) (0 6)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie)
    (cat "server store" s u-0 cookie-0))
  (facts (neq u-0 s))
  (leads-to ((1 7) (0 4)))
  (rule fact-serverr-neq0 gen-st-serverr-0 trRl_clienta-at-6
    trRl_clienta-at-7)
  (operation encryption-test (displaced 1 3 serverr 7)
    (enc response (hash (hash pms cr sr) "server_write")) (0 6))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((send cr-0) (recv (cat sr-0 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt-1 "server store" s u-0 cookie-0))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (label 64)
  (parent 60)
  (unrealized (2 4) (2 5))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms pms-0 random48)
    (spk spk-0 akey) (s ca u ca-0 name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-0)
    (sr sr-0) (pms pms-0) (spk spk-0) (u u) (s s) (ca ca-0)
    (cookiestor cookiestor))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3))
    ((2 7) (0 4)) ((3 1) (0 6)))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (leads-to ((2 7) (0 4)))
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc response (hash (hash pms cr sr) "server_write")) (0 6))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((send cr-0)
      (recv (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms-0 spk-0)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms-0 spk-0)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms-0 spk-0)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms-0 spk-0)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 65)
  (parent 60)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any any-0 mesg) (cookie-0 data) (response httpdata)
    (request request-0 httpreq) (p p-0 password)
    (cr sr cr-0 sr-0 cr-1 sr-1 random32) (pms pms-0 random48) (ppk skey)
    (spk spk-0 akey) (u ca u-0 s ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk-0) (u u) (s s)
    (ca ca-0) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk-0) (s s) (ca ca-0))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-1)
    (sr sr-1) (pms pms-0) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie-0)
    (response response) (request request-0) (p p-0) (cr cr) (sr sr)
    (pms pms) (ppk ppk) (spk spk-0) (u u-0) (s s) (ca ca-0)
    (authstor authstor))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((1 1) (0 1)) ((2 7) (0 4))
    ((3 1) (0 1)) ((3 3) (0 3)) ((3 9) (0 6)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cookie-0 cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (facts (neq u-0 s))
  (leads-to ((2 7) (0 4)))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test (displaced 2 4 servera 10)
    (enc response (hash (hash pms cr sr) "server_write")) (0 6))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0)
      (send (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0)))))
    ((send cr-1) (recv (cat sr-1 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful"
          (enc cookie-0 (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u-0 cookie-0))
      (recv
        (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (label 66)
  (parent 61)
  (unrealized (3 4) (3 8))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (cookie-0 data) (response httpdata)
    (request request-0 httpreq) (p password)
    (cr sr cr-0 sr-0 cr-1 sr-1 random32) (pms pms-0 random48) (ppk skey)
    (spk spk-0 akey) (u ca u-0 s ca-0 name) (pt pt-0 pt-1 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk-0) (u u) (s s)
    (ca ca-0) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk-0) (s s) (ca ca-0))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-1)
    (sr sr-1) (pms pms-0) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor))
  (defstrand serverr 7 (cookie cookie-0) (response response)
    (request request-0) (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk-0)
    (u u-0) (s s) (ca ca-0) (authstor authstor))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((1 1) (0 1)) ((2 7) (0 4))
    ((3 1) (0 1)) ((3 3) (0 3)) ((3 6) (0 6)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie)
    (cat "server store" s u-0 cookie-0))
  (facts (neq u-0 s))
  (leads-to ((2 7) (0 4)))
  (rule fact-serverr-neq0 gen-st-serverr-0 trRl_clienta-at-6
    trRl_clienta-at-7)
  (operation encryption-test (displaced 2 4 serverr 7)
    (enc response (hash (hash pms cr sr) "server_write")) (0 6))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0)
      (send (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0)))))
    ((send cr-1) (recv (cat sr-1 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt-1 "server store" s u-0 cookie-0))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (label 67)
  (parent 61)
  (unrealized (3 4) (3 5))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 cr-1 sr-1 random32)
    (pms pms-0 random48) (spk spk-0 akey) (s ca u ca-0 name)
    (pt pt-0 pval) (cookiestor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-1)
    (sr sr-1) (pms pms-0) (spk spk-0) (u u) (s s) (ca ca-0)
    (cookiestor cookiestor))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)) ((3 7) (0 4)) ((4 1) (0 6)))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (leads-to ((3 7) (0 4)))
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc response (hash (hash pms cr sr) "server_write")) (0 6))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((send cr-1)
      (recv (cat sr-1 s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms-0 spk-0)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms-0 spk-0)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms-0 spk-0)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms-0 spk-0)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 68)
  (parent 61)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie mesg) (response httpdata) (request httpreq)
    (cr sr cr-0 sr-0 random32) (pms random48) (spk akey) (s ca u name)
    (pt pval) (cookiestor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 2) (4 0)) ((1 1) (0 1)) ((2 1) (0 3)) ((3 1) (2 0))
    ((4 1) (3 0)))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 69)
  (parent 62)
  (unrealized (0 4) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (cookie any any-0 mesg) (cookie-0 data) (response httpdata)
    (request request-0 httpreq) (p p-0 password)
    (cr sr cr-0 sr-0 random32) (pms pms-0 random48) (ppk skey)
    (spk spk-0 akey) (u ca u-0 s ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk-0) (u u) (s s)
    (ca ca-0) (cookiestor cookiestor))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-0)
    (sr sr-0) (pms pms-0) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie-0)
    (response response) (request request-0) (p p-0) (cr cr) (sr sr)
    (pms pms) (ppk ppk) (spk spk-0) (u u-0) (s s) (ca ca-0)
    (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 7) (0 4)) ((2 1) (0 1))
    ((2 3) (0 3)) ((2 9) (0 6)) ((3 1) (2 4)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cookie-0 cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (facts (neq u-0 s))
  (leads-to ((1 7) (0 4)))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "client_write"))
    (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")) (2 4))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((send cr-0) (recv (cat sr-0 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful"
          (enc cookie-0 (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u-0 cookie-0))
      (recv
        (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write"))))
  (label 70)
  (parent 63)
  (unrealized (2 8) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms pms-0 random48)
    (ppk skey) (spk spk-0 akey) (u ca u-0 s ca-0 name)
    (pt pt-0 pt-1 pval) (cookiestor authstor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-0) (sr sr-0) (pms pms-0) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk-0)
    (u u-0) (s s) (ca ca-0) (authstor authstor))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 5) (2 4)) ((1 7) (0 4))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 6) (0 6)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr))))
    (cat "server store" s u-0 cookie))
  (facts (neq u-0 s))
  (leads-to ((1 7) (0 4)))
  (rule fact-serverr-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (displaced 3 0 clientr 6)
    (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
      (hash (hash pms cr sr) "client_write")) (2 4))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((send cr-0) (recv (cat sr-0 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt-1 "server store" s u-0 cookie))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (label 71)
  (parent 64)
  (unrealized (1 5) (2 5))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (cookie-0 data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr cr-0 sr-0 random32)
    (pms pms-0 random48) (ppk skey) (spk spk-0 akey)
    (u ca u-0 s ca-0 name) (pt pt-0 pt-1 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk-0) (u u) (s s)
    (ca ca-0) (cookiestor cookiestor))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-0)
    (sr sr-0) (pms pms-0) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor))
  (defstrand serverr 7 (cookie cookie-0) (response response)
    (request request-0) (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk-0)
    (u u-0) (s s) (ca ca-0) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 7) (0 4)) ((2 1) (0 1))
    ((2 3) (0 3)) ((2 6) (0 6)) ((3 1) (2 4)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie)
    (cat "server store" s u-0 cookie-0))
  (facts (neq u-0 s))
  (leads-to ((1 7) (0 4)))
  (rule fact-serverr-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "client_write"))
    (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
      (hash (hash pms cr sr) "client_write")) (2 4))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((send cr-0) (recv (cat sr-0 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt-1 "server store" s u-0 cookie-0))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write"))))
  (label 72)
  (parent 64)
  (unrealized (2 4) (2 5) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms pms-0 random48)
    (spk spk-0 akey) (s ca u ca-0 name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-0)
    (sr sr-0) (pms pms-0) (spk spk-0) (u u) (s s) (ca ca-0)
    (cookiestor cookiestor))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3))
    ((2 7) (0 4)) ((3 1) (0 6)) ((4 1) (3 0)))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (leads-to ((2 7) (0 4)))
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((send cr-0)
      (recv (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms-0 spk-0)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms-0 spk-0)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms-0 spk-0)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms-0 spk-0)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 73)
  (parent 65)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any any-0 mesg) (cookie-0 data) (response httpdata)
    (request request-0 httpreq) (p p-0 password)
    (cr sr cr-0 sr-0 cr-1 sr-1 random32) (pms pms-0 random48) (ppk skey)
    (spk spk-0 akey) (u ca u-0 s ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk-0) (u u) (s s)
    (ca ca-0) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk-0) (s s) (ca ca-0))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-1)
    (sr sr-1) (pms pms-0) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie-0)
    (response response) (request request-0) (p p-0) (cr cr) (sr sr)
    (pms pms) (ppk ppk) (spk spk-0) (u u-0) (s s) (ca ca-0)
    (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((1 1) (0 1)) ((2 7) (0 4))
    ((3 1) (0 1)) ((3 3) (0 3)) ((3 9) (0 6)) ((4 1) (3 4)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cookie-0 cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (facts (neq u-0 s))
  (leads-to ((2 7) (0 4)))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "client_write"))
    (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")) (3 4))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0)
      (send (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0)))))
    ((send cr-1) (recv (cat sr-1 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful"
          (enc cookie-0 (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u-0 cookie-0))
      (recv
        (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write"))))
  (label 74)
  (parent 66)
  (unrealized (3 8) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 cr-1 sr-1 random32)
    (pms pms-0 random48) (ppk skey) (spk spk-0 akey)
    (u ca u-0 s ca-0 name) (pt pt-0 pt-1 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk-0) (s s) (ca ca-0))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-1) (sr sr-1) (pms pms-0) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk-0)
    (u u-0) (s s) (ca ca-0) (authstor authstor))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((0 5) (3 4)) ((1 1) (0 1))
    ((2 7) (0 4)) ((3 1) (0 1)) ((3 3) (0 3)) ((3 6) (0 6)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr))))
    (cat "server store" s u-0 cookie))
  (facts (neq u-0 s))
  (leads-to ((2 7) (0 4)))
  (rule fact-serverr-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (displaced 4 0 clientr 6)
    (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
      (hash (hash pms cr sr) "client_write")) (3 4))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0)
      (send (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0)))))
    ((send cr-1) (recv (cat sr-1 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt-1 "server store" s u-0 cookie))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (label 75)
  (parent 67)
  (unrealized (2 5) (3 5))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (cookie-0 data) (response httpdata)
    (request request-0 httpreq) (p password)
    (cr sr cr-0 sr-0 cr-1 sr-1 random32) (pms pms-0 random48) (ppk skey)
    (spk spk-0 akey) (u ca u-0 s ca-0 name) (pt pt-0 pt-1 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk-0) (u u) (s s)
    (ca ca-0) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk-0) (s s) (ca ca-0))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-1)
    (sr sr-1) (pms pms-0) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor))
  (defstrand serverr 7 (cookie cookie-0) (response response)
    (request request-0) (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk-0)
    (u u-0) (s s) (ca ca-0) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((1 1) (0 1)) ((2 7) (0 4))
    ((3 1) (0 1)) ((3 3) (0 3)) ((3 6) (0 6)) ((4 1) (3 4)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie)
    (cat "server store" s u-0 cookie-0))
  (facts (neq u-0 s))
  (leads-to ((2 7) (0 4)))
  (rule fact-serverr-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "client_write"))
    (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
      (hash (hash pms cr sr) "client_write")) (3 4))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0)
      (send (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0)))))
    ((send cr-1) (recv (cat sr-1 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt-1 "server store" s u-0 cookie-0))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write"))))
  (label 76)
  (parent 67)
  (unrealized (3 4) (3 5) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 cr-1 sr-1 random32)
    (pms pms-0 random48) (spk spk-0 akey) (s ca u ca-0 name)
    (pt pt-0 pval) (cookiestor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-1)
    (sr sr-1) (pms pms-0) (spk spk-0) (u u) (s s) (ca ca-0)
    (cookiestor cookiestor))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)) ((3 7) (0 4)) ((4 1) (0 6)) ((5 1) (4 0)))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (leads-to ((3 7) (0 4)))
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (4 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((send cr-1)
      (recv (cat sr-1 s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms-0 spk-0)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms-0 spk-0)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms-0 spk-0)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms-0 spk-0)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 77)
  (parent 68)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any any-0 mesg) (cookie-0 data) (response httpdata)
    (request request-0 httpreq) (p p-0 password)
    (cr sr cr-0 sr-0 random32) (pms pms-0 random48) (ppk skey)
    (spk spk-0 akey) (u ca u-0 s ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk-0) (u u) (s s)
    (ca ca-0) (cookiestor cookiestor))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-0)
    (sr sr-0) (pms pms-0) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie-0)
    (response response) (request request-0) (p p-0) (cr cr) (sr sr)
    (pms pms) (ppk ppk) (spk spk-0) (u u-0) (s s) (ca ca-0)
    (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 7) (0 4)) ((2 1) (0 1))
    ((2 3) (0 3)) ((2 9) (0 6)) ((3 1) (2 4)) ((4 1) (3 0)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cookie-0 cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (facts (neq u-0 s))
  (leads-to ((1 7) (0 4)))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "client_write"))
    (hash (hash pms cr sr) "client_write") (3 0))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((send cr-0) (recv (cat sr-0 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful"
          (enc cookie-0 (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u-0 cookie-0))
      (recv
        (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write"))))
  (label 78)
  (parent 70)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request httpreq) (p p-0 password)
    (cr sr cr-0 sr-0 cr-1 sr-1 random32) (pms pms-0 pms-1 random48)
    (ppk ppk-0 skey) (spk spk-0 spk-1 akey) (u ca u-0 s ca-0 ca-1 name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-0) (sr sr-0) (pms pms-0) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk-0)
    (u u-0) (s s) (ca ca-0) (authstor authstor))
  (defstrand servera 8 (any any-0) (cookie cookie) (p p-0) (cr cr-1)
    (sr sr-1) (pms pms-1) (ppk ppk-0) (spk spk-1) (u u-0) (s s)
    (ca ca-1) (authstor authstor))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 5) (2 4)) ((1 7) (0 4))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 6) (0 6)) ((3 5) (1 5))
    ((3 7) (2 5)))
  (non-orig ppk ppk-0 (invk spk-0) (privk ca-0))
  (uniq-orig cookie cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr))))
    (cat "server store" s u-0 cookie))
  (facts (neq u-0 s))
  (leads-to ((1 7) (0 4)) ((3 7) (2 5)))
  (rule fact-serverr-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation channel-test (added-strand servera 8)
    (ch-msg authstor (cat pt-1 "server store" s u-0 cookie)) (2 5))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((send cr-0) (recv (cat sr-0 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt-1 "server store" s u-0 cookie))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-1)
      (send (cat sr-1 s spk-1 (enc (hash s spk-1) (privk ca-1))))
      (recv
        (cat (enc pms-1 spk-1)
          (enc
            (hash pms-1 "client finished"
              (hash cr-1 sr-1
                (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
                (enc pms-1 spk-1)))
            (hash (hash pms-1 cr-1 sr-1) "client_write"))))
      (send
        (enc
          (hash pms-1 "server finished"
            (hash cr-1 sr-1
              (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
              (enc pms-1 spk-1)
              (enc
                (hash pms-1 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
                    (enc pms-1 spk-1)))
                (hash (hash pms-1 cr-1 sr-1) "client_write"))))
          (hash (hash pms-1 cr-1 sr-1) "server_write")))
      (recv
        (enc "login" u-0 p-0
          (hash (hash pms-1 cr-1 sr-1) "client_write")))
      (send
        (enc "login-successful"
          (enc cookie (hash ppk-0 (hash pms-1 cr-1 sr-1)))
          (hash (hash pms-1 cr-1 sr-1) "server_write")))
      (load authstor (cat pt-2 any-0))
      (stor authstor (cat pt-1 "server store" s u-0 cookie))))
  (label 79)
  (parent 71)
  (unrealized (1 5))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (cookie-0 data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr cr-0 sr-0 random32)
    (pms pms-0 random48) (ppk skey) (spk spk-0 akey)
    (u ca u-0 s ca-0 name) (pt pt-0 pt-1 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk-0) (u u) (s s)
    (ca ca-0) (cookiestor cookiestor))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-0)
    (sr sr-0) (pms pms-0) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor))
  (defstrand serverr 7 (cookie cookie-0) (response response)
    (request request-0) (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk-0)
    (u u-0) (s s) (ca ca-0) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 7) (0 4)) ((2 1) (0 1))
    ((2 3) (0 3)) ((2 6) (0 6)) ((3 1) (2 4)) ((4 1) (3 0)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie)
    (cat "server store" s u-0 cookie-0))
  (facts (neq u-0 s))
  (leads-to ((1 7) (0 4)))
  (rule fact-serverr-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "client_write"))
    (hash (hash pms cr sr) "client_write") (3 0))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((send cr-0) (recv (cat sr-0 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt-1 "server store" s u-0 cookie-0))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write"))))
  (label 80)
  (parent 72)
  (unrealized (2 4) (2 5) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms pms-0 random48)
    (spk spk-0 akey) (s ca u ca-0 name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-0)
    (sr sr-0) (pms pms-0) (spk spk-0) (u u) (s s) (ca ca-0)
    (cookiestor cookiestor))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (5 0)) ((1 1) (0 1))
    ((1 3) (0 3)) ((2 7) (0 4)) ((3 1) (0 6)) ((4 1) (3 0))
    ((5 1) (4 0)))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (leads-to ((2 7) (0 4)))
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (4 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((send cr-0)
      (recv (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms-0 spk-0)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms-0 spk-0)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms-0 spk-0)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms-0 spk-0)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 81)
  (parent 73)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (cookie any any-0 mesg) (cookie-0 data) (response httpdata)
    (request request-0 httpreq) (p p-0 password)
    (cr sr cr-0 sr-0 cr-1 sr-1 random32) (pms pms-0 random48) (ppk skey)
    (spk spk-0 akey) (u ca u-0 s ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk-0) (u u) (s s)
    (ca ca-0) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk-0) (s s) (ca ca-0))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-1)
    (sr sr-1) (pms pms-0) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie-0)
    (response response) (request request-0) (p p-0) (cr cr) (sr sr)
    (pms pms) (ppk ppk) (spk spk-0) (u u-0) (s s) (ca ca-0)
    (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((1 1) (0 1)) ((2 7) (0 4))
    ((3 1) (0 1)) ((3 3) (0 3)) ((3 9) (0 6)) ((4 1) (3 4))
    ((5 1) (4 0)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cookie-0 cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (facts (neq u-0 s))
  (leads-to ((2 7) (0 4)))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "client_write"))
    (hash (hash pms cr sr) "client_write") (4 0))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0)
      (send (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0)))))
    ((send cr-1) (recv (cat sr-1 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful"
          (enc cookie-0 (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u-0 cookie-0))
      (recv
        (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write"))))
  (label 82)
  (parent 74)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request httpreq) (p p-0 password)
    (cr sr cr-0 sr-0 cr-1 sr-1 random32) (pms pms-0 pms-1 random48)
    (ppk ppk-0 skey) (spk spk-0 akey) (u ca u-0 s ca-0 name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-0) (sr sr-0) (pms pms-0) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk-0)
    (u u-0) (s s) (ca ca-0) (authstor authstor))
  (defstrand servera 8 (any any-0) (cookie cookie) (p p-0) (cr cr-1)
    (sr sr-1) (pms pms-1) (ppk ppk-0) (spk spk-0) (u u-0) (s s)
    (ca ca-0) (authstor authstor))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 5) (2 4)) ((1 7) (0 4))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 6) (0 6)) ((3 1) (0 1))
    ((3 5) (1 5)) ((3 7) (2 5)))
  (non-orig ppk ppk-0 (invk spk-0) (privk ca-0))
  (uniq-orig cookie cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr))))
    (cat "server store" s u-0 cookie))
  (facts (neq u-0 s))
  (leads-to ((1 7) (0 4)) ((3 7) (2 5)))
  (rule fact-serverr-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation channel-test (displaced 1 4 servera 8)
    (ch-msg authstor (cat pt-1 "server store" s u-0 cookie)) (3 5))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((send cr-0) (recv (cat sr-0 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt-1 "server store" s u-0 cookie))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-1)
      (send (cat sr-1 s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms-1 spk-0)
          (enc
            (hash pms-1 "client finished"
              (hash cr-1 sr-1
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms-1 spk-0)))
            (hash (hash pms-1 cr-1 sr-1) "client_write"))))
      (send
        (enc
          (hash pms-1 "server finished"
            (hash cr-1 sr-1
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms-1 spk-0)
              (enc
                (hash pms-1 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms-1 spk-0)))
                (hash (hash pms-1 cr-1 sr-1) "client_write"))))
          (hash (hash pms-1 cr-1 sr-1) "server_write")))
      (recv
        (enc "login" u-0 p-0
          (hash (hash pms-1 cr-1 sr-1) "client_write")))
      (send
        (enc "login-successful"
          (enc cookie (hash ppk-0 (hash pms-1 cr-1 sr-1)))
          (hash (hash pms-1 cr-1 sr-1) "server_write")))
      (load authstor (cat pt-2 any-0))
      (stor authstor (cat pt-1 "server store" s u-0 cookie))))
  (label 83)
  (parent 75)
  (unrealized (1 5))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request httpreq) (p p-0 password)
    (cr sr cr-0 sr-0 cr-1 sr-1 cr-2 sr-2 random32)
    (pms pms-0 pms-1 random48) (ppk ppk-0 skey) (spk spk-0 spk-1 akey)
    (u ca u-0 s ca-0 ca-1 name) (pt pt-0 pt-1 pt-2 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk-0) (s s) (ca ca-0))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-1) (sr sr-1) (pms pms-0) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk-0)
    (u u-0) (s s) (ca ca-0) (authstor authstor))
  (defstrand servera 8 (any any-0) (cookie cookie) (p p-0) (cr cr-2)
    (sr sr-2) (pms pms-1) (ppk ppk-0) (spk spk-1) (u u-0) (s s)
    (ca ca-1) (authstor authstor))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((0 5) (3 4)) ((1 1) (0 1))
    ((2 7) (0 4)) ((3 1) (0 1)) ((3 3) (0 3)) ((3 6) (0 6))
    ((4 5) (2 5)) ((4 7) (3 5)))
  (non-orig ppk ppk-0 (invk spk-0) (privk ca-0))
  (uniq-orig cookie cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr))))
    (cat "server store" s u-0 cookie))
  (facts (neq u-0 s))
  (leads-to ((2 7) (0 4)) ((4 7) (3 5)))
  (rule fact-serverr-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation channel-test (added-strand servera 8)
    (ch-msg authstor (cat pt-1 "server store" s u-0 cookie)) (3 5))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0)
      (send (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0)))))
    ((send cr-1) (recv (cat sr-1 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt-1 "server store" s u-0 cookie))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-2)
      (send (cat sr-2 s spk-1 (enc (hash s spk-1) (privk ca-1))))
      (recv
        (cat (enc pms-1 spk-1)
          (enc
            (hash pms-1 "client finished"
              (hash cr-2 sr-2
                (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
                (enc pms-1 spk-1)))
            (hash (hash pms-1 cr-2 sr-2) "client_write"))))
      (send
        (enc
          (hash pms-1 "server finished"
            (hash cr-2 sr-2
              (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
              (enc pms-1 spk-1)
              (enc
                (hash pms-1 "client finished"
                  (hash cr-2 sr-2
                    (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
                    (enc pms-1 spk-1)))
                (hash (hash pms-1 cr-2 sr-2) "client_write"))))
          (hash (hash pms-1 cr-2 sr-2) "server_write")))
      (recv
        (enc "login" u-0 p-0
          (hash (hash pms-1 cr-2 sr-2) "client_write")))
      (send
        (enc "login-successful"
          (enc cookie (hash ppk-0 (hash pms-1 cr-2 sr-2)))
          (hash (hash pms-1 cr-2 sr-2) "server_write")))
      (load authstor (cat pt-2 any-0))
      (stor authstor (cat pt-1 "server store" s u-0 cookie))))
  (label 84)
  (parent 75)
  (unrealized (2 5))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (cookie-0 data) (response httpdata)
    (request request-0 httpreq) (p password)
    (cr sr cr-0 sr-0 cr-1 sr-1 random32) (pms pms-0 random48) (ppk skey)
    (spk spk-0 akey) (u ca u-0 s ca-0 name) (pt pt-0 pt-1 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk-0) (u u) (s s)
    (ca ca-0) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk-0) (s s) (ca ca-0))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-1)
    (sr sr-1) (pms pms-0) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor))
  (defstrand serverr 7 (cookie cookie-0) (response response)
    (request request-0) (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk-0)
    (u u-0) (s s) (ca ca-0) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((1 1) (0 1)) ((2 7) (0 4))
    ((3 1) (0 1)) ((3 3) (0 3)) ((3 6) (0 6)) ((4 1) (3 4))
    ((5 1) (4 0)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie)
    (cat "server store" s u-0 cookie-0))
  (facts (neq u-0 s))
  (leads-to ((2 7) (0 4)))
  (rule fact-serverr-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "client_write"))
    (hash (hash pms cr sr) "client_write") (4 0))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0)
      (send (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0)))))
    ((send cr-1) (recv (cat sr-1 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt-1 "server store" s u-0 cookie-0))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write"))))
  (label 85)
  (parent 76)
  (unrealized (3 4) (3 5) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie any mesg) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 cr-1 sr-1 random32)
    (pms pms-0 random48) (spk spk-0 akey) (s ca u ca-0 name)
    (pt pt-0 pval) (cookiestor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-1)
    (sr sr-1) (pms pms-0) (spk spk-0) (u u) (s s) (ca ca-0)
    (cookiestor cookiestor))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 2) (6 0)) ((1 1) (0 1))
    ((2 1) (0 1)) ((2 3) (0 3)) ((3 7) (0 4)) ((4 1) (0 6))
    ((5 1) (4 0)) ((6 1) (5 0)))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (leads-to ((3 7) (0 4)))
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (5 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((send cr-1)
      (recv (cat sr-1 s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms-0 spk-0)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms-0 spk-0)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms-0 spk-0)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms-0 spk-0)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 86)
  (parent 77)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (cookie any any-0 mesg) (cookie-0 data) (response httpdata)
    (request request-0 httpreq) (p p-0 password)
    (cr sr cr-0 sr-0 random32) (pms pms-0 random48) (ppk skey)
    (spk spk-0 akey) (u ca u-0 s ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk-0) (u u) (s s)
    (ca ca-0) (cookiestor cookiestor))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-0)
    (sr sr-0) (pms pms-0) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie-0)
    (response response) (request request-0) (p p-0) (cr cr) (sr sr)
    (pms pms) (ppk ppk) (spk spk-0) (u u-0) (s s) (ca ca-0)
    (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 2) (5 0)) ((1 7) (0 4))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 9) (0 6)) ((3 1) (2 4))
    ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cookie-0 cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (facts (neq u-0 s))
  (leads-to ((1 7) (0 4)))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (4 0))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((send cr-0) (recv (cat sr-0 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful"
          (enc cookie-0 (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u-0 cookie-0))
      (recv
        (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 87)
  (parent 78)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request httpreq) (p p-0 password)
    (cr sr cr-0 sr-0 cr-1 sr-1 random32) (pms pms-0 pms-1 random48)
    (ppk ppk-0 skey) (spk spk-0 spk-1 akey) (u ca u-0 s ca-0 ca-1 name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-0) (sr sr-0) (pms pms-0) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk-0)
    (u u-0) (s s) (ca ca-0) (authstor authstor))
  (defstrand servera 8 (any any-0) (cookie cookie) (p p-0) (cr cr-1)
    (sr sr-1) (pms pms-1) (ppk ppk-0) (spk spk-1) (u u-0) (s s)
    (ca ca-1) (authstor authstor))
  (deflistener (hash ppk (hash pms cr sr)))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 5) (2 4)) ((1 7) (0 4))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 6) (0 6)) ((3 5) (1 5))
    ((3 7) (2 5)) ((4 1) (1 5)))
  (non-orig ppk ppk-0 (invk spk-0) (privk ca-0))
  (uniq-orig cookie cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr))))
    (cat "server store" s u-0 cookie))
  (facts (neq u-0 s))
  (leads-to ((1 7) (0 4)) ((3 7) (2 5)))
  (rule fact-serverr-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test
    (added-listener (hash ppk (hash pms cr sr)))
    (enc cookie (hash ppk (hash pms cr sr))) (1 5))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((send cr-0) (recv (cat sr-0 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt-1 "server store" s u-0 cookie))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-1)
      (send (cat sr-1 s spk-1 (enc (hash s spk-1) (privk ca-1))))
      (recv
        (cat (enc pms-1 spk-1)
          (enc
            (hash pms-1 "client finished"
              (hash cr-1 sr-1
                (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
                (enc pms-1 spk-1)))
            (hash (hash pms-1 cr-1 sr-1) "client_write"))))
      (send
        (enc
          (hash pms-1 "server finished"
            (hash cr-1 sr-1
              (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
              (enc pms-1 spk-1)
              (enc
                (hash pms-1 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
                    (enc pms-1 spk-1)))
                (hash (hash pms-1 cr-1 sr-1) "client_write"))))
          (hash (hash pms-1 cr-1 sr-1) "server_write")))
      (recv
        (enc "login" u-0 p-0
          (hash (hash pms-1 cr-1 sr-1) "client_write")))
      (send
        (enc "login-successful"
          (enc cookie (hash ppk-0 (hash pms-1 cr-1 sr-1)))
          (hash (hash pms-1 cr-1 sr-1) "server_write")))
      (load authstor (cat pt-2 any-0))
      (stor authstor (cat pt-1 "server store" s u-0 cookie)))
    ((recv (hash ppk (hash pms cr sr)))
      (send (hash ppk (hash pms cr sr)))))
  (label 88)
  (parent 79)
  (unrealized (1 5) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (cookie any mesg) (cookie-0 data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr cr-0 sr-0 random32)
    (pms pms-0 random48) (ppk skey) (spk spk-0 akey)
    (u ca u-0 s ca-0 name) (pt pt-0 pt-1 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk-0) (u u) (s s)
    (ca ca-0) (cookiestor cookiestor))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-0)
    (sr sr-0) (pms pms-0) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor))
  (defstrand serverr 7 (cookie cookie-0) (response response)
    (request request-0) (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk-0)
    (u u-0) (s s) (ca ca-0) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 2) (5 0)) ((1 7) (0 4))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 6) (0 6)) ((3 1) (2 4))
    ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie)
    (cat "server store" s u-0 cookie-0))
  (facts (neq u-0 s))
  (leads-to ((1 7) (0 4)))
  (rule fact-serverr-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (4 0))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((send cr-0) (recv (cat sr-0 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt-1 "server store" s u-0 cookie-0))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 89)
  (parent 80)
  (unrealized (2 4) (2 5) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (cookie any any-0 mesg) (cookie-0 data) (response httpdata)
    (request request-0 httpreq) (p p-0 password)
    (cr sr cr-0 sr-0 cr-1 sr-1 random32) (pms pms-0 random48) (ppk skey)
    (spk spk-0 akey) (u ca u-0 s ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk-0) (u u) (s s)
    (ca ca-0) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk-0) (s s) (ca ca-0))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-1)
    (sr sr-1) (pms pms-0) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie-0)
    (response response) (request request-0) (p p-0) (cr cr) (sr sr)
    (pms pms) (ppk ppk) (spk spk-0) (u u-0) (s s) (ca ca-0)
    (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((0 2) (6 0)) ((1 1) (0 1))
    ((2 7) (0 4)) ((3 1) (0 1)) ((3 3) (0 3)) ((3 9) (0 6))
    ((4 1) (3 4)) ((5 1) (4 0)) ((6 1) (5 0)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cookie-0 cr sr pms)
  (gen-st (cat "client store" u s cookie))
  (facts (neq u-0 s))
  (leads-to ((2 7) (0 4)))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (5 0))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0)
      (send (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0)))))
    ((send cr-1) (recv (cat sr-1 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful"
          (enc cookie-0 (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u-0 cookie-0))
      (recv
        (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 90)
  (parent 82)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request httpreq) (p p-0 password)
    (cr sr cr-0 sr-0 cr-1 sr-1 random32) (pms pms-0 pms-1 random48)
    (ppk ppk-0 skey) (spk spk-0 akey) (u ca u-0 s ca-0 name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-0) (sr sr-0) (pms pms-0) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk-0)
    (u u-0) (s s) (ca ca-0) (authstor authstor))
  (defstrand servera 8 (any any-0) (cookie cookie) (p p-0) (cr cr-1)
    (sr sr-1) (pms pms-1) (ppk ppk-0) (spk spk-0) (u u-0) (s s)
    (ca ca-0) (authstor authstor))
  (deflistener (hash ppk (hash pms cr sr)))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 5) (2 4)) ((1 7) (0 4))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 6) (0 6)) ((3 1) (0 1))
    ((3 5) (1 5)) ((3 7) (2 5)) ((4 1) (1 5)))
  (non-orig ppk ppk-0 (invk spk-0) (privk ca-0))
  (uniq-orig cookie cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr))))
    (cat "server store" s u-0 cookie))
  (facts (neq u-0 s))
  (leads-to ((1 7) (0 4)) ((3 7) (2 5)))
  (rule fact-serverr-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test
    (added-listener (hash ppk (hash pms cr sr)))
    (enc cookie (hash ppk (hash pms cr sr))) (1 5))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((send cr-0) (recv (cat sr-0 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt-1 "server store" s u-0 cookie))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-1)
      (send (cat sr-1 s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms-1 spk-0)
          (enc
            (hash pms-1 "client finished"
              (hash cr-1 sr-1
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms-1 spk-0)))
            (hash (hash pms-1 cr-1 sr-1) "client_write"))))
      (send
        (enc
          (hash pms-1 "server finished"
            (hash cr-1 sr-1
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms-1 spk-0)
              (enc
                (hash pms-1 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms-1 spk-0)))
                (hash (hash pms-1 cr-1 sr-1) "client_write"))))
          (hash (hash pms-1 cr-1 sr-1) "server_write")))
      (recv
        (enc "login" u-0 p-0
          (hash (hash pms-1 cr-1 sr-1) "client_write")))
      (send
        (enc "login-successful"
          (enc cookie (hash ppk-0 (hash pms-1 cr-1 sr-1)))
          (hash (hash pms-1 cr-1 sr-1) "server_write")))
      (load authstor (cat pt-2 any-0))
      (stor authstor (cat pt-1 "server store" s u-0 cookie)))
    ((recv (hash ppk (hash pms cr sr)))
      (send (hash ppk (hash pms cr sr)))))
  (label 91)
  (parent 83)
  (unrealized (1 5) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request httpreq) (p p-0 password)
    (cr sr cr-0 sr-0 cr-1 sr-1 cr-2 sr-2 random32)
    (pms pms-0 pms-1 random48) (ppk ppk-0 skey) (spk spk-0 spk-1 akey)
    (u ca u-0 s ca-0 ca-1 name) (pt pt-0 pt-1 pt-2 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk-0) (s s) (ca ca-0))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-1) (sr sr-1) (pms pms-0) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk-0)
    (u u-0) (s s) (ca ca-0) (authstor authstor))
  (defstrand servera 8 (any any-0) (cookie cookie) (p p-0) (cr cr-2)
    (sr sr-2) (pms pms-1) (ppk ppk-0) (spk spk-1) (u u-0) (s s)
    (ca ca-1) (authstor authstor))
  (deflistener (hash ppk (hash pms cr sr)))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((0 5) (3 4)) ((1 1) (0 1))
    ((2 7) (0 4)) ((3 1) (0 1)) ((3 3) (0 3)) ((3 6) (0 6))
    ((4 5) (2 5)) ((4 7) (3 5)) ((5 1) (2 5)))
  (non-orig ppk ppk-0 (invk spk-0) (privk ca-0))
  (uniq-orig cookie cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr))))
    (cat "server store" s u-0 cookie))
  (facts (neq u-0 s))
  (leads-to ((2 7) (0 4)) ((4 7) (3 5)))
  (rule fact-serverr-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test
    (added-listener (hash ppk (hash pms cr sr)))
    (enc cookie (hash ppk (hash pms cr sr))) (2 5))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0)
      (send (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0)))))
    ((send cr-1) (recv (cat sr-1 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt-1 "server store" s u-0 cookie))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-2)
      (send (cat sr-2 s spk-1 (enc (hash s spk-1) (privk ca-1))))
      (recv
        (cat (enc pms-1 spk-1)
          (enc
            (hash pms-1 "client finished"
              (hash cr-2 sr-2
                (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
                (enc pms-1 spk-1)))
            (hash (hash pms-1 cr-2 sr-2) "client_write"))))
      (send
        (enc
          (hash pms-1 "server finished"
            (hash cr-2 sr-2
              (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
              (enc pms-1 spk-1)
              (enc
                (hash pms-1 "client finished"
                  (hash cr-2 sr-2
                    (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
                    (enc pms-1 spk-1)))
                (hash (hash pms-1 cr-2 sr-2) "client_write"))))
          (hash (hash pms-1 cr-2 sr-2) "server_write")))
      (recv
        (enc "login" u-0 p-0
          (hash (hash pms-1 cr-2 sr-2) "client_write")))
      (send
        (enc "login-successful"
          (enc cookie (hash ppk-0 (hash pms-1 cr-2 sr-2)))
          (hash (hash pms-1 cr-2 sr-2) "server_write")))
      (load authstor (cat pt-2 any-0))
      (stor authstor (cat pt-1 "server store" s u-0 cookie)))
    ((recv (hash ppk (hash pms cr sr)))
      (send (hash ppk (hash pms cr sr)))))
  (label 92)
  (parent 84)
  (unrealized (2 5) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (cookie any mesg) (cookie-0 data) (response httpdata)
    (request request-0 httpreq) (p password)
    (cr sr cr-0 sr-0 cr-1 sr-1 random32) (pms pms-0 random48) (ppk skey)
    (spk spk-0 akey) (u ca u-0 s ca-0 name) (pt pt-0 pt-1 pval)
    (cookiestor authstor locn))
  (defstrand clientr 7 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (pms pms) (spk spk-0) (u u) (s s)
    (ca ca-0) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk-0) (s s) (ca ca-0))
  (defstrand clienta 8 (cookie cookie) (any any) (p p) (cr cr-1)
    (sr sr-1) (pms pms-0) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor))
  (defstrand serverr 7 (cookie cookie-0) (response response)
    (request request-0) (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk-0)
    (u u-0) (s s) (ca ca-0) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((0 2) (6 0)) ((1 1) (0 1))
    ((2 7) (0 4)) ((3 1) (0 1)) ((3 3) (0 3)) ((3 6) (0 6))
    ((4 1) (3 4)) ((5 1) (4 0)) ((6 1) (5 0)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cr sr pms)
  (gen-st (cat "client store" u s cookie)
    (cat "server store" s u-0 cookie-0))
  (facts (neq u-0 s))
  (leads-to ((2 7) (0 4)))
  (rule fact-serverr-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (5 0))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0)
      (send (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0)))))
    ((send cr-1) (recv (cat sr-1 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt "client store" u s cookie)))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie-0 (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt-1 "server store" s u-0 cookie-0))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 93)
  (parent 85)
  (unrealized (3 4) (3 5) (6 0))
  (dead)
  (comment "empty cohort"))

(comment "Nothing left to do")

(defprotocol ca basic
  (defrole clienta
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie any mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write"))) (load cookiestor any)
      (stor cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (defrole clientr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    (gen-st (cat "client store" u s cookie)))
  (defrole servera
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie data) (ppk skey) (any mesg) (authstor locn)
      (request httpreq) (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))) (load authstor any)
      (stor authstor (cat "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (uniq-orig cookie)
    (facts (neq u s)))
  (defrole serverr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie data) (ppk skey) (authstor locn) (request httpreq)
      (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat "server store" s u cookie))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (facts (neq u s))
    (gen-st (cat "server store" s u cookie)))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-servera-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "servera" z (idx 5)) (p "servera" "s" z s)
          (p "servera" "u" z u)) (fact neq u s))))
  (defgenrule fact-serverr-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "s" z s)
          (p "serverr" "u" z u)) (fact neq u s))))
  (defgenrule trRl_clienta-at-7
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_clienta-at-6
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 6)))))
  (defgenrule trRl_servera-at-7
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_servera-at-6
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 6)))))
  (defgenrule gen-st-clientr-0
    (forall ((z strd) (cookie mesg) (s u name))
      (implies
        (and (p "clientr" z (idx 5)) (p "clientr" "cookie" z cookie)
          (p "clientr" "s" z s) (p "clientr" "u" z u))
        (gen-st (cat "client store" u s cookie)))))
  (defgenrule gen-st-serverr-0
    (forall ((z strd) (cookie data) (u s name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "cookie" z cookie)
          (p "serverr" "u" z u) (p "serverr" "s" z s))
        (gen-st (cat "server store" s u cookie)))))
  (lang (random32 atom) (random48 atom) (password atom) (httpreq atom)
    (httpdata atom)))

(defskeleton ca
  (vars (any mesg) (cookie data) (request httpreq) (p password)
    (cr sr random32) (pms random48) (ppk skey) (spk akey) (s ca u name)
    (pt pt-0 pval) (authstor locn))
  (defstrand servera 9 (any any) (cookie cookie) (request request) (p p)
    (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk) (u u) (s s) (ca ca)
    (authstor authstor))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie sr)
  (traces
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt any))
      (stor authstor (cat pt-0 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))))
  (label 94)
  (realized)
  (origs (pt-0 (0 7)) (cookie (0 5)) (sr (0 1)))
  (comment "Not closed under rules"))

(defskeleton ca
  (vars (any mesg) (cookie data) (request httpreq) (p password)
    (cr sr random32) (pms random48) (ppk skey) (spk akey) (s ca u name)
    (pt pt-0 pval) (authstor locn))
  (defstrand servera 9 (any any) (cookie cookie) (request request) (p p)
    (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk) (u u) (s s) (ca ca)
    (authstor authstor))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie sr)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_servera-at-6 trRl_servera-at-7)
  (traces
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt any))
      (stor authstor (cat pt-0 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))))
  (label 95)
  (parent 94)
  (realized)
  (shape)
  (maps
    ((0)
      ((s s) (ca ca) (spk spk) (cr cr) (sr sr) (pms pms) (u u) (p p)
        (cookie cookie) (ppk ppk) (any any) (authstor authstor)
        (request request))))
  (origs (pt-0 (0 7)) (cookie (0 5)) (sr (0 1))))

(comment "Nothing left to do")

(defprotocol ca basic
  (defrole clienta
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie any mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write"))) (load cookiestor any)
      (stor cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (defrole clientr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    (gen-st (cat "client store" u s cookie)))
  (defrole servera
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie data) (ppk skey) (any mesg) (authstor locn)
      (request httpreq) (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))) (load authstor any)
      (stor authstor (cat "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (uniq-orig cookie)
    (facts (neq u s)))
  (defrole serverr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie data) (ppk skey) (authstor locn) (request httpreq)
      (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat "server store" s u cookie))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (facts (neq u s))
    (gen-st (cat "server store" s u cookie)))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-servera-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "servera" z (idx 5)) (p "servera" "s" z s)
          (p "servera" "u" z u)) (fact neq u s))))
  (defgenrule fact-serverr-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "s" z s)
          (p "serverr" "u" z u)) (fact neq u s))))
  (defgenrule trRl_clienta-at-7
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_clienta-at-6
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 6)))))
  (defgenrule trRl_servera-at-7
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_servera-at-6
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 6)))))
  (defgenrule gen-st-clientr-0
    (forall ((z strd) (cookie mesg) (s u name))
      (implies
        (and (p "clientr" z (idx 5)) (p "clientr" "cookie" z cookie)
          (p "clientr" "s" z s) (p "clientr" "u" z u))
        (gen-st (cat "client store" u s cookie)))))
  (defgenrule gen-st-serverr-0
    (forall ((z strd) (cookie data) (u s name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "cookie" z cookie)
          (p "serverr" "u" z u) (p "serverr" "s" z s))
        (gen-st (cat "server store" s u cookie)))))
  (lang (random32 atom) (random48 atom) (password atom) (httpreq atom)
    (httpdata atom)))

(defskeleton ca
  (vars (any mesg) (cookie data) (request httpreq) (p password)
    (cr sr random32) (pms random48) (ppk skey) (spk akey) (s ca u name)
    (pt pt-0 pval) (authstor locn))
  (defstrand servera 9 (any any) (cookie cookie) (request request) (p p)
    (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk) (u u) (s s) (ca ca)
    (authstor authstor))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (traces
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt any))
      (stor authstor (cat pt-0 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))))
  (label 96)
  (realized)
  (origs (pt-0 (0 7)) (sr (0 1)) (cookie (0 5)))
  (comment "Not closed under rules"))

(defskeleton ca
  (vars (any mesg) (cookie data) (request httpreq) (p password)
    (cr sr random32) (pms random48) (ppk skey) (spk akey) (s ca u name)
    (pt pt-0 pval) (authstor locn))
  (defstrand servera 9 (any any) (cookie cookie) (request request) (p p)
    (cr cr) (sr sr) (pms pms) (ppk ppk) (spk spk) (u u) (s s) (ca ca)
    (authstor authstor))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_servera-at-6 trRl_servera-at-7)
  (traces
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt any))
      (stor authstor (cat pt-0 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))))
  (label 97)
  (parent 96)
  (realized)
  (shape)
  (maps
    ((0)
      ((s s) (ca ca) (spk spk) (cr cr) (sr sr) (pms pms) (cookie cookie)
        (u u) (p p) (ppk ppk) (any any) (authstor authstor)
        (request request))))
  (origs (pt-0 (0 7)) (sr (0 1)) (cookie (0 5))))

(comment "Nothing left to do")

(defprotocol ca basic
  (defrole clienta
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie any mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write"))) (load cookiestor any)
      (stor cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (defrole clientr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    (gen-st (cat "client store" u s cookie)))
  (defrole servera
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie data) (ppk skey) (any mesg) (authstor locn)
      (request httpreq) (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))) (load authstor any)
      (stor authstor (cat "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (uniq-orig cookie)
    (facts (neq u s)))
  (defrole serverr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie data) (ppk skey) (authstor locn) (request httpreq)
      (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat "server store" s u cookie))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (facts (neq u s))
    (gen-st (cat "server store" s u cookie)))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-servera-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "servera" z (idx 5)) (p "servera" "s" z s)
          (p "servera" "u" z u)) (fact neq u s))))
  (defgenrule fact-serverr-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "s" z s)
          (p "serverr" "u" z u)) (fact neq u s))))
  (defgenrule trRl_clienta-at-7
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_clienta-at-6
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 6)))))
  (defgenrule trRl_servera-at-7
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_servera-at-6
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 6)))))
  (defgenrule gen-st-clientr-0
    (forall ((z strd) (cookie mesg) (s u name))
      (implies
        (and (p "clientr" z (idx 5)) (p "clientr" "cookie" z cookie)
          (p "clientr" "s" z s) (p "clientr" "u" z u))
        (gen-st (cat "client store" u s cookie)))))
  (defgenrule gen-st-serverr-0
    (forall ((z strd) (cookie data) (u s name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "cookie" z cookie)
          (p "serverr" "u" z u) (p "serverr" "s" z s))
        (gen-st (cat "server store" s u cookie)))))
  (lang (random32 atom) (random48 atom) (password atom) (httpreq atom)
    (httpdata atom)))

(defskeleton ca
  (vars (cookie data) (request httpreq) (cr sr random32) (pms random48)
    (ppk skey) (spk akey) (s ca u name) (pt pval) (authstor locn))
  (defstrand serverr 6 (cookie cookie) (request request) (cr cr) (sr sr)
    (pms pms) (ppk ppk) (spk spk) (u u) (s s) (ca ca)
    (authstor authstor))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig sr)
  (traces
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt "server store" s u cookie))))
  (label 98)
  (unrealized (0 4))
  (origs (sr (0 1)))
  (comment "Not closed under rules"))

(defskeleton ca
  (vars (cookie data) (request httpreq) (cr sr random32) (pms random48)
    (ppk skey) (spk akey) (s ca u name) (pt pval) (authstor locn))
  (defstrand serverr 6 (cookie cookie) (request request) (cr cr) (sr sr)
    (pms pms) (ppk ppk) (spk spk) (u u) (s s) (ca ca)
    (authstor authstor))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig sr)
  (gen-st (cat "server store" s u cookie))
  (facts (neq u s))
  (rule fact-serverr-neq0 gen-st-serverr-0)
  (traces
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt "server store" s u cookie))))
  (label 99)
  (parent 98)
  (unrealized (0 4) (0 5))
  (origs (sr (0 1)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie data) (request httpreq) (cr sr random32) (pms random48)
    (ppk skey) (spk akey) (s ca u name) (pt pval) (authstor locn))
  (defstrand serverr 6 (cookie cookie) (request request) (cr cr) (sr sr)
    (pms pms) (ppk ppk) (spk spk) (u u) (s s) (ca ca)
    (authstor authstor))
  (deflistener (hash ppk (hash pms cr sr)))
  (precedes ((1 1) (0 4)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig sr)
  (gen-st (cat "server store" s u cookie))
  (facts (neq u s))
  (rule fact-serverr-neq0)
  (operation encryption-test
    (added-listener (hash ppk (hash pms cr sr)))
    (enc cookie (hash ppk (hash pms cr sr))) (0 4))
  (traces
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat pt "server store" s u cookie)))
    ((recv (hash ppk (hash pms cr sr)))
      (send (hash ppk (hash pms cr sr)))))
  (label 100)
  (parent 99)
  (unrealized (0 5) (1 0))
  (dead)
  (comment "empty cohort"))

(comment "Nothing left to do")

(defprotocol ca basic
  (defrole clienta
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie any mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write"))) (load cookiestor any)
      (stor cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (defrole clientr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    (gen-st (cat "client store" u s cookie)))
  (defrole servera
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie data) (ppk skey) (any mesg) (authstor locn)
      (request httpreq) (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))) (load authstor any)
      (stor authstor (cat "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (uniq-orig cookie)
    (facts (neq u s)))
  (defrole serverr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie data) (ppk skey) (authstor locn) (request httpreq)
      (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat "server store" s u cookie))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (facts (neq u s))
    (gen-st (cat "server store" s u cookie)))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-servera-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "servera" z (idx 5)) (p "servera" "s" z s)
          (p "servera" "u" z u)) (fact neq u s))))
  (defgenrule fact-serverr-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "s" z s)
          (p "serverr" "u" z u)) (fact neq u s))))
  (defgenrule trRl_clienta-at-7
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_clienta-at-6
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 6)))))
  (defgenrule trRl_servera-at-7
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_servera-at-6
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 6)))))
  (defgenrule gen-st-clientr-0
    (forall ((z strd) (cookie mesg) (s u name))
      (implies
        (and (p "clientr" z (idx 5)) (p "clientr" "cookie" z cookie)
          (p "clientr" "s" z s) (p "clientr" "u" z u))
        (gen-st (cat "client store" u s cookie)))))
  (defgenrule gen-st-serverr-0
    (forall ((z strd) (cookie data) (u s name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "cookie" z cookie)
          (p "serverr" "u" z u) (p "serverr" "s" z s))
        (gen-st (cat "server store" s u cookie)))))
  (lang (random32 atom) (random48 atom) (password atom) (httpreq atom)
    (httpdata atom)))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (deflistener cookie)
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (goals
    (forall
      ((cookie data) (p password) (cr sr random32) (pms random48)
        (u s ca name) (spk akey) (z z-0 strd))
      (implies
        (and (p "clienta" z 10) (p "" z-0 2)
          (p "clienta" "cookie" z cookie) (p "clienta" "p" z p)
          (p "clienta" "spk" z spk) (p "clienta" "cr" z cr)
          (p "clienta" "sr" z sr) (p "clienta" "pms" z pms)
          (p "clienta" "u" z u) (p "clienta" "s" z s)
          (p "clienta" "ca" z ca) (p "" "x" z-0 cookie) (non (invk spk))
          (non (privk ca)) (pnon p) (uniq sr) (uniq-at cr z 0)
          (uniq-at pms z 2)) (false))))
  (traces ((recv cookie) (send cookie))
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (label 101)
  (unrealized (1 1) (1 3) (1 5) (1 9))
  (origs (pt-0 (1 7)) (cr (1 0)) (pms (1 2)))
  (comment "Not closed under rules"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (deflistener cookie)
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (traces ((recv cookie) (send cookie))
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (label 102)
  (parent 101)
  (unrealized (1 1) (1 3) (1 5) (1 9))
  (origs (pt-0 (1 7)) (cr (1 0)) (pms (1 2)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (deflistener cookie)
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (precedes ((2 1) (1 1)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-strand serverr 2)
    (enc (hash s spk) (privk ca)) (1 1))
  (traces ((recv cookie) (send cookie))
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca))))))
  (label 103)
  (parent 102)
  (unrealized (1 3) (1 5) (1 9))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (deflistener cookie)
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (precedes ((1 0) (2 0)) ((1 2) (2 2)) ((2 1) (1 1)) ((2 3) (1 3)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (displaced 2 3 serverr 4)
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (1 3))
  (traces ((recv cookie) (send cookie))
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))))
  (label 104)
  (parent 103)
  (unrealized (1 5) (1 9))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (deflistener cookie)
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (precedes ((1 0) (3 0)) ((1 2) (3 2)) ((2 1) (1 1)) ((3 1) (1 1))
    ((3 3) (1 3)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-strand serverr 4)
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (1 3))
  (traces ((recv cookie) (send cookie))
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))))
  (label 105)
  (parent 103)
  (unrealized (1 5) (1 9))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (deflistener cookie)
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((2 1) (1 1)) ((3 1) (1 3)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (1 3))
  (traces ((recv cookie) (send cookie))
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 106)
  (parent 103)
  (unrealized (1 3) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (deflistener cookie)
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((1 0) (2 0)) ((1 2) (2 2)) ((2 1) (1 1)) ((2 3) (1 3))
    ((3 1) (1 5)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc "login-successful" cookie
      (hash (hash pms cr sr) "server_write")) (1 5))
  (traces ((recv cookie) (send cookie))
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 107)
  (parent 104)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (deflistener cookie)
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((1 0) (3 0)) ((1 2) (3 2)) ((2 1) (1 1)) ((3 1) (1 1))
    ((3 3) (1 3)) ((4 1) (1 5)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc "login-successful" cookie
      (hash (hash pms cr sr) "server_write")) (1 5))
  (traces ((recv cookie) (send cookie))
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 108)
  (parent 105)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (deflistener cookie)
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((2 1) (1 1)) ((3 1) (1 3)) ((4 1) (3 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (3 0))
  (traces ((recv cookie) (send cookie))
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 109)
  (parent 106)
  (unrealized (1 3) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (deflistener cookie)
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((1 0) (2 0)) ((1 2) (2 2)) ((2 1) (1 1)) ((2 3) (1 3))
    ((3 1) (1 5)) ((4 1) (3 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (3 0))
  (traces ((recv cookie) (send cookie))
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 110)
  (parent 107)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (deflistener cookie)
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((1 0) (3 0)) ((1 2) (3 2)) ((2 1) (1 1)) ((3 1) (1 1))
    ((3 3) (1 3)) ((4 1) (1 5)) ((5 1) (4 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (4 0))
  (traces ((recv cookie) (send cookie))
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 111)
  (parent 108)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (deflistener cookie)
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((1 2) (5 0)) ((2 1) (1 1)) ((3 1) (1 3)) ((4 1) (3 0))
    ((5 1) (4 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (4 0))
  (traces ((recv cookie) (send cookie))
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 112)
  (parent 109)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (deflistener cookie)
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((1 0) (2 0)) ((1 2) (2 2)) ((1 2) (5 0)) ((2 1) (1 1))
    ((2 3) (1 3)) ((3 1) (1 5)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (4 0))
  (traces ((recv cookie) (send cookie))
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 113)
  (parent 110)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (deflistener cookie)
  (defstrand clienta 10 (cookie cookie) (any any) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((1 0) (3 0)) ((1 2) (3 2)) ((1 2) (6 0)) ((2 1) (1 1))
    ((3 1) (1 1)) ((3 3) (1 3)) ((4 1) (1 5)) ((5 1) (4 0))
    ((6 1) (5 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (5 0))
  (traces ((recv cookie) (send cookie))
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 114)
  (parent 111)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(comment "Nothing left to do")

(defprotocol ca basic
  (defrole clienta
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie any mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write"))) (load cookiestor any)
      (stor cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (defrole clientr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    (gen-st (cat "client store" u s cookie)))
  (defrole servera
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie data) (ppk skey) (any mesg) (authstor locn)
      (request httpreq) (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))) (load authstor any)
      (stor authstor (cat "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (uniq-orig cookie)
    (facts (neq u s)))
  (defrole serverr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie data) (ppk skey) (authstor locn) (request httpreq)
      (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat "server store" s u cookie))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (facts (neq u s))
    (gen-st (cat "server store" s u cookie)))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-servera-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "servera" z (idx 5)) (p "servera" "s" z s)
          (p "servera" "u" z u)) (fact neq u s))))
  (defgenrule fact-serverr-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "s" z s)
          (p "serverr" "u" z u)) (fact neq u s))))
  (defgenrule trRl_clienta-at-7
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_clienta-at-6
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 6)))))
  (defgenrule trRl_servera-at-7
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_servera-at-6
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 6)))))
  (defgenrule gen-st-clientr-0
    (forall ((z strd) (cookie mesg) (s u name))
      (implies
        (and (p "clientr" z (idx 5)) (p "clientr" "cookie" z cookie)
          (p "clientr" "s" z s) (p "clientr" "u" z u))
        (gen-st (cat "client store" u s cookie)))))
  (defgenrule gen-st-serverr-0
    (forall ((z strd) (cookie data) (u s name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "cookie" z cookie)
          (p "serverr" "u" z u) (p "serverr" "s" z s))
        (gen-st (cat "server store" s u cookie)))))
  (lang (random32 atom) (random48 atom) (password atom) (httpreq atom)
    (httpdata atom)))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (goals
    (forall
      ((z strd) (cookie data) (u s ca name) (cr sr random32)
        (pms random48) (ppk skey) (spk akey))
      (implies
        (and (p "clienta" z 10)
          (p "clienta" "cookie" z
            (enc cookie (hash ppk (hash pms cr sr))))
          (p "clienta" "u" z u) (p "clienta" "s" z s)
          (p "clienta" "spk" z spk) (p "clienta" "ca" z ca)
          (p "clienta" "cr" z cr) (p "clienta" "sr" z sr)
          (p "clienta" "pms" z pms) (non (privk ca)) (non (invk spk))
          (non ppk) (uniq sr) (uniq-at cr z 0) (uniq-at pms z 2))
        (exists ((z0 strd))
          (and (p "servera" z0 10) (p "servera" "cookie" z0 cookie)
            (p "servera" "u" z0 u) (p "servera" "s" z0 s)
            (p "servera" "spk" z0 spk) (uniq-at cookie z0 5)
            (fact neq u s))))))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (label 115)
  (unrealized (0 1) (0 3) (0 5) (0 9))
  (origs (pt-0 (0 7)) (cr (0 0)) (pms (0 2)))
  (comment "Not closed under rules"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (label 116)
  (parent 115)
  (unrealized (0 1) (0 3) (0 5) (0 9))
  (origs (pt-0 (0 7)) (cr (0 0)) (pms (0 2)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey)
    (spk akey) (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (precedes ((1 1) (0 1)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-strand serverr 2)
    (enc (hash s spk) (privk ca)) (0 1))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca))))))
  (label 117)
  (parent 116)
  (unrealized (0 3) (0 5) (0 9))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (displaced 1 2 serverr 4)
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (0 3))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))))
  (label 118)
  (parent 117)
  (unrealized (0 5) (0 9))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey)
    (spk akey) (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-strand serverr 4)
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (0 3))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))))
  (label 119)
  (parent 117)
  (unrealized (0 5) (0 9))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey)
    (spk akey) (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((1 1) (0 1)) ((2 1) (0 3)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (0 3))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 120)
  (parent 117)
  (unrealized (0 3) (0 5) (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr random32) (pms random48) (ppk skey)
    (spk akey) (u u-0 s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u-0) (s s) (ca ca))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3))
    ((1 5) (0 5)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u-0 s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (displaced 1 2 servera 6)
    (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
      (hash (hash pms cr sr) "server_write")) (0 5))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))))
  (label 121)
  (parent 118)
  (unrealized (0 9) (1 4))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3))
    ((2 1) (0 5)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
      (hash (hash pms cr sr) "server_write")) (0 5))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 122)
  (parent 118)
  (unrealized (0 5) (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr cr-0 sr-0 random32) (pms random48)
    (ppk skey) (spk akey) (u u-0 s ca name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u-0) (s s) (ca ca))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)) ((2 5) (0 5)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u-0 s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (displaced 2 3 servera 6)
    (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
      (hash (hash pms cr sr) "server_write")) (0 5))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))))
  (label 123)
  (parent 119)
  (unrealized (0 9) (2 4))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey)
    (spk akey) (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)) ((3 1) (0 5)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
      (hash (hash pms cr sr) "server_write")) (0 5))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 124)
  (parent 119)
  (unrealized (0 5) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey)
    (spk akey) (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((1 1) (0 1)) ((2 1) (0 3)) ((3 1) (2 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (2 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 125)
  (parent 120)
  (unrealized (0 3) (0 5) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u) (s s) (ca ca))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((1 1) (0 1))
    ((1 3) (0 3)) ((1 5) (0 5)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (displaced 2 0 clienta 5)
    (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")) (1 4))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))))
  (label 126)
  (parent 121)
  (unrealized (0 9))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr random32) (pms random48) (ppk skey)
    (spk akey) (u u-0 s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u-0) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3))
    ((1 5) (0 5)) ((2 1) (1 4)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u-0 s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "client_write"))
    (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")) (1 4))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write"))))
  (label 127)
  (parent 121)
  (unrealized (0 9) (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3))
    ((2 1) (0 5)) ((3 1) (2 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (2 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 128)
  (parent 122)
  (unrealized (0 5) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey)
    (spk akey) (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 6 (cookie cookie) (p p) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u) (s s) (ca ca))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 4) (2 4)) ((1 1) (0 1))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (displaced 3 0 clienta 5)
    (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")) (2 4))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))))
  (label 129)
  (parent 123)
  (unrealized (0 9))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr cr-0 sr-0 random32) (pms random48)
    (ppk skey) (spk akey) (u u-0 s ca name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u-0) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)) ((2 5) (0 5)) ((3 1) (2 4)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u-0 s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "client_write"))
    (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")) (2 4))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write"))))
  (label 130)
  (parent 123)
  (unrealized (0 9) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey)
    (spk akey) (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)) ((3 1) (0 5)) ((4 1) (3 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 131)
  (parent 124)
  (unrealized (0 5) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey)
    (spk akey) (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 2) (4 0)) ((1 1) (0 1)) ((2 1) (0 3)) ((3 1) (2 0))
    ((4 1) (3 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 132)
  (parent 125)
  (unrealized (0 5) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request-0) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((1 1) (0 1))
    ((1 3) (0 3)) ((1 5) (0 5)) ((1 9) (0 9)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test (displaced 1 2 servera 10)
    (enc response (hash (hash pms cr sr) "server_write")) (0 9))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (label 133)
  (parent 126)
  (unrealized (1 8))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((1 1) (0 1))
    ((1 3) (0 3)) ((1 5) (0 5)) ((2 1) (0 9)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc response (hash (hash pms cr sr) "server_write")) (0 9))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 134)
  (parent 126)
  (unrealized (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr random32) (pms random48) (ppk skey)
    (spk akey) (u u-0 s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u-0) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3))
    ((1 5) (0 5)) ((2 1) (1 4)) ((3 1) (2 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u-0 s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "client_write"))
    (hash (hash pms cr sr) "client_write") (2 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write"))))
  (label 135)
  (parent 127)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (4 0)) ((1 1) (0 1))
    ((1 3) (0 3)) ((2 1) (0 5)) ((3 1) (2 0)) ((4 1) (3 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 136)
  (parent 128)
  (unrealized (0 5) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr cr-0 sr-0 random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request-0) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 4) (2 4)) ((1 1) (0 1))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5)) ((2 9) (0 9)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test (displaced 2 3 servera 10)
    (enc response (hash (hash pms cr sr) "server_write")) (0 9))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (label 137)
  (parent 129)
  (unrealized (2 8))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey)
    (spk akey) (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 6 (cookie cookie) (p p) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 4) (2 4)) ((1 1) (0 1))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5)) ((3 1) (0 9)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc response (hash (hash pms cr sr) "server_write")) (0 9))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 138)
  (parent 129)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr cr-0 sr-0 random32) (pms random48)
    (ppk skey) (spk akey) (u u-0 s ca name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u-0) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)) ((2 5) (0 5)) ((3 1) (2 4)) ((4 1) (3 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u-0 s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "client_write"))
    (hash (hash pms cr sr) "client_write") (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write"))))
  (label 139)
  (parent 130)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey)
    (spk akey) (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 2) (5 0)) ((1 1) (0 1))
    ((2 1) (0 1)) ((2 3) (0 3)) ((3 1) (0 5)) ((4 1) (3 0))
    ((5 1) (4 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (4 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 140)
  (parent 131)
  (unrealized (0 5) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request httpreq) (p password) (cr sr random32) (pms random48)
    (ppk skey) (spk akey) (u s ca name) (pt pt-0 pt-1 pt-2 pval)
    (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((0 8) (1 8))
    ((1 1) (0 1)) ((1 3) (0 3)) ((1 5) (0 5)) ((1 9) (0 9)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test (displaced 2 0 clienta 9)
    (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
      (hash (hash pms cr sr) "client_write")) (1 8))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (label 141)
  (parent 133)
  (realized)
  (shape)
  (satisfies yes)
  (maps
    ((0)
      ((cookie cookie) (u u) (s s) (ca ca) (cr cr) (sr sr) (pms pms)
        (ppk ppk) (spk spk) (p p) (any any) (cookiestor cookiestor)
        (request request) (response response))))
  (origs (pt-0 (0 7)) (cookie (1 5)) (pt-2 (1 7)) (sr (1 1)) (cr (0 0))
    (pms (0 2))))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request-0) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((1 1) (0 1))
    ((1 3) (0 3)) ((1 5) (0 5)) ((1 9) (0 9)) ((2 1) (1 8)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "client_write"))
    (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
      (hash (hash pms cr sr) "client_write")) (1 8))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write"))))
  (label 142)
  (parent 133)
  (unrealized (1 8) (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((1 1) (0 1))
    ((1 3) (0 3)) ((1 5) (0 5)) ((2 1) (0 9)) ((3 1) (2 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (2 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 143)
  (parent 134)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr random32) (pms random48) (ppk skey)
    (spk akey) (u u-0 s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u-0) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (4 0)) ((1 1) (0 1))
    ((1 3) (0 3)) ((1 5) (0 5)) ((2 1) (1 4)) ((3 1) (2 0))
    ((4 1) (3 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u-0 s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 144)
  (parent 135)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request httpreq) (p password) (cr sr cr-0 sr-0 random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 4) (2 4)) ((0 8) (2 8))
    ((1 1) (0 1)) ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5))
    ((2 9) (0 9)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test (displaced 3 0 clienta 9)
    (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
      (hash (hash pms cr sr) "client_write")) (2 8))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write")))))
  (label 145)
  (parent 137)
  (seen 141)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr cr-0 sr-0 random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request-0) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 4) (2 4)) ((1 1) (0 1))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5)) ((2 9) (0 9))
    ((3 1) (2 8)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "client_write"))
    (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
      (hash (hash pms cr sr) "client_write")) (2 8))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write"))))
  (label 146)
  (parent 137)
  (unrealized (2 8) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey)
    (spk akey) (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 6 (cookie cookie) (p p) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 4) (2 4)) ((1 1) (0 1))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5)) ((3 1) (0 9))
    ((4 1) (3 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 147)
  (parent 138)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr cr-0 sr-0 random32) (pms random48)
    (ppk skey) (spk akey) (u u-0 s ca name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u-0) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 2) (5 0)) ((1 1) (0 1))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5)) ((3 1) (2 4))
    ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u-0 s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (4 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 148)
  (parent 139)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request-0) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 4) (1 4)) ((1 1) (0 1))
    ((1 3) (0 3)) ((1 5) (0 5)) ((1 9) (0 9)) ((2 1) (1 8))
    ((3 1) (2 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "client_write"))
    (hash (hash pms cr sr) "client_write") (2 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write"))))
  (label 149)
  (parent 142)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (4 0)) ((0 4) (1 4))
    ((1 1) (0 1)) ((1 3) (0 3)) ((1 5) (0 5)) ((2 1) (0 9))
    ((3 1) (2 0)) ((4 1) (3 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 150)
  (parent 143)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr cr-0 sr-0 random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request-0) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 4) (2 4)) ((1 1) (0 1))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5)) ((2 9) (0 9))
    ((3 1) (2 8)) ((4 1) (3 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "client_write"))
    (hash (hash pms cr sr) "client_write") (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write"))))
  (label 151)
  (parent 146)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey)
    (spk akey) (u s ca name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 6 (cookie cookie) (p p) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk) (u u) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 2) (5 0)) ((0 4) (2 4))
    ((1 1) (0 1)) ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5))
    ((3 1) (0 9)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (4 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 152)
  (parent 147)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request-0) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 2) (4 0)) ((0 4) (1 4))
    ((1 1) (0 1)) ((1 3) (0 3)) ((1 5) (0 5)) ((1 9) (0 9))
    ((2 1) (1 8)) ((3 1) (2 0)) ((4 1) (3 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 153)
  (parent 149)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr cr-0 sr-0 random32)
    (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn))
  (defstrand clienta 10
    (cookie (enc cookie (hash ppk (hash pms cr sr)))) (any any)
    (response response) (request request) (p p) (cr cr) (sr sr)
    (pms pms) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand servera 10 (any any-0) (cookie cookie) (response response)
    (request request-0) (p p) (cr cr) (sr sr) (pms pms) (ppk ppk)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 2) (5 0)) ((0 4) (2 4))
    ((1 1) (0 1)) ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (0 5))
    ((2 9) (0 9)) ((3 1) (2 8)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cookie cr sr pms)
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7
    trRl_servera-at-6 trRl_servera-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (4 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat pt any))
      (stor cookiestor
        (cat pt-0 "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request-0
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 154)
  (parent 151)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(comment "Nothing left to do")

(defprotocol ca basic
  (defrole clienta
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie any mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (send (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (recv
        (enc "login-successful" cookie
          (hash (hash pms cr sr) "server_write"))) (load cookiestor any)
      (stor cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (defrole clientr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie mesg) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor (cat "client store" u s cookie))
      (send (enc cookie request (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    (gen-st (cat "client store" u s cookie)))
  (defrole servera
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (p password) (cookie data) (ppk skey) (any mesg) (authstor locn)
      (request httpreq) (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv (enc "login" u p (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))) (load authstor any)
      (stor authstor (cat "server store" s u cookie))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (uniq-orig cookie)
    (facts (neq u s)))
  (defrole serverr
    (vars (u s ca name) (cr sr random32) (spk akey) (pms random48)
      (cookie data) (ppk skey) (authstor locn) (request httpreq)
      (response httpdata))
    (trace (recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (load authstor (cat "server store" s u cookie))
      (send (enc response (hash (hash pms cr sr) "server_write"))))
    (non-orig ppk)
    (facts (neq u s))
    (gen-st (cat "server store" s u cookie)))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-servera-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "servera" z (idx 5)) (p "servera" "s" z s)
          (p "servera" "u" z u)) (fact neq u s))))
  (defgenrule fact-serverr-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "s" z s)
          (p "serverr" "u" z u)) (fact neq u s))))
  (defgenrule trRl_clienta-at-7
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_clienta-at-6
    (forall ((z strd))
      (implies (p "clienta" z (idx 8)) (trans z (idx 6)))))
  (defgenrule trRl_servera-at-7
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 7)))))
  (defgenrule trRl_servera-at-6
    (forall ((z strd))
      (implies (p "servera" z (idx 8)) (trans z (idx 6)))))
  (defgenrule gen-st-clientr-0
    (forall ((z strd) (cookie mesg) (s u name))
      (implies
        (and (p "clientr" z (idx 5)) (p "clientr" "cookie" z cookie)
          (p "clientr" "s" z s) (p "clientr" "u" z u))
        (gen-st (cat "client store" u s cookie)))))
  (defgenrule gen-st-serverr-0
    (forall ((z strd) (cookie data) (u s name))
      (implies
        (and (p "serverr" z (idx 6)) (p "serverr" "cookie" z cookie)
          (p "serverr" "u" z u) (p "serverr" "s" z s))
        (gen-st (cat "server store" s u cookie)))))
  (lang (random32 atom) (random48 atom) (password atom) (httpreq atom)
    (httpdata atom)))

(defskeleton ca
  (vars (cookie data) (response httpdata) (request httpreq)
    (cr sr random32) (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pval) (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (goals
    (forall
      ((z strd) (cookie data) (u s ca name) (cr sr random32)
        (pms random48) (ppk skey) (spk akey))
      (implies
        (and (p "clientr" z 7)
          (p "clientr" "cookie" z
            (enc cookie (hash ppk (hash pms cr sr))))
          (p "clientr" "u" z u) (p "clientr" "s" z s)
          (p "clientr" "spk" z spk) (p "clientr" "ca" z ca)
          (p "clientr" "cr" z cr) (p "clientr" "sr" z sr)
          (p "clientr" "pms" z pms) (non (privk ca)) (non (invk spk))
          (non ppk) (uniq sr) (uniq-at cr z 0) (uniq-at pms z 2))
        (exists ((z0 strd))
          (and (p "servera" z0 8) (p "servera" "cookie" z0 cookie)
            (p "servera" "u" z0 u) (p "servera" "s" z0 s)
            (p "servera" "s" z0 spk) (uniq-at cookie z0 5)
            (fact neq u s))))))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (label 155)
  (unrealized (0 1) (0 3) (0 4) (0 6))
  (origs (cr (0 0)) (pms (0 2)))
  (comment "Not closed under rules"))

(defskeleton ca
  (vars (cookie data) (response httpdata) (request httpreq)
    (cr sr random32) (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pval) (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (rule gen-st-clientr-0)
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write")))))
  (label 156)
  (parent 155)
  (unrealized (0 1) (0 3) (0 4) (0 6))
  (origs (cr (0 0)) (pms (0 2)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie data) (response httpdata) (request httpreq)
    (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pval) (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (precedes ((1 1) (0 1)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (operation encryption-test (added-strand serverr 2)
    (enc (hash s spk) (privk ca)) (0 1))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca))))))
  (label 157)
  (parent 156)
  (unrealized (0 3) (0 4) (0 6))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton ca
  (vars (cookie data) (response httpdata) (request httpreq)
    (cr sr random32) (pms random48) (ppk skey) (spk akey) (u s ca name)
    (pt pval) (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (operation encryption-test (displaced 1 2 serverr 4)
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (0 3))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))))
  (label 158)
  (parent 157)
  (unrealized (0 4) (0 6))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie data) (response httpdata) (request httpreq)
    (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pval) (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (operation encryption-test (added-strand serverr 4)
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (0 3))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))))
  (label 159)
  (parent 157)
  (unrealized (0 4) (0 6))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (cookie data) (response httpdata) (request httpreq)
    (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pval) (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (precedes ((1 1) (0 1)) ((2 1) (0 3)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "server_write"))
    (enc
      (hash pms "server finished"
        (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
          (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (hash (hash pms cr sr) "server_write")) (0 3))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write"))))
  (label 160)
  (parent 157)
  (unrealized (0 3) (0 4) (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms pms-0 random48)
    (ppk skey) (spk spk-0 akey) (u s ca ca-0 name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-0) (sr sr-0) (pms pms-0) (spk spk-0) (u u)
    (s s) (ca ca-0) (cookiestor cookiestor))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3))
    ((2 7) (0 4)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (leads-to ((2 7) (0 4)))
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation channel-test (added-strand clienta 8)
    (ch-msg cookiestor
      (cat pt "client store" u s
        (enc cookie (hash ppk (hash pms cr sr))))) (0 4))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((send cr-0)
      (recv (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms-0 spk-0)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms-0 spk-0)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms-0 spk-0)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms-0 spk-0)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))))
  (label 161)
  (parent 158)
  (unrealized (0 6) (2 5))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 cr-1 sr-1 random32)
    (pms pms-0 random48) (ppk skey) (spk spk-0 akey) (u s ca ca-0 name)
    (pt pt-0 pval) (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-1) (sr sr-1) (pms pms-0) (spk spk-0) (u u)
    (s s) (ca ca-0) (cookiestor cookiestor))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)) ((3 7) (0 4)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (leads-to ((3 7) (0 4)))
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation channel-test (added-strand clienta 8)
    (ch-msg cookiestor
      (cat pt "client store" u s
        (enc cookie (hash ppk (hash pms cr sr))))) (0 4))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((send cr-1)
      (recv (cat sr-1 s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms-0 spk-0)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms-0 spk-0)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms-0 spk-0)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms-0 spk-0)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))))
  (label 162)
  (parent 159)
  (unrealized (0 6) (3 5))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton ca
  (vars (cookie data) (response httpdata) (request httpreq)
    (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pval) (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (precedes ((1 1) (0 1)) ((2 1) (0 3)) ((3 1) (2 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "server_write"))
    (hash (hash pms cr sr) "server_write") (2 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write"))))
  (label 163)
  (parent 160)
  (unrealized (0 3) (0 4) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr cr-0 sr-0 random32) (pms pms-0 random48)
    (ppk skey) (spk spk-0 akey) (u ca u-0 s ca-0 name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-0) (sr sr-0) (pms pms-0) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk-0) (u u-0) (s s) (ca ca-0))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 7) (0 4)) ((2 1) (0 1))
    ((2 3) (0 3)) ((2 5) (1 5)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cookie cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (facts (neq u-0 s))
  (leads-to ((1 7) (0 4)))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (displaced 1 3 servera 6)
    (enc cookie (hash ppk (hash pms cr sr))) (2 5))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((send cr-0) (recv (cat sr-0 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))))
  (label 164)
  (parent 161)
  (unrealized (0 6) (1 5) (2 4))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 random32) (pms pms-0 random48)
    (ppk skey) (spk spk-0 akey) (u s ca ca-0 name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-0) (sr sr-0) (pms pms-0) (spk spk-0) (u u)
    (s s) (ca ca-0) (cookiestor cookiestor))
  (deflistener (hash ppk (hash pms cr sr)))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((1 1) (0 1)) ((1 3) (0 3))
    ((2 7) (0 4)) ((3 1) (2 5)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (leads-to ((2 7) (0 4)))
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash ppk (hash pms cr sr)))
    (enc cookie (hash ppk (hash pms cr sr))) (2 5))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((send cr-0)
      (recv (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms-0 spk-0)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms-0 spk-0)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms-0 spk-0)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms-0 spk-0)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv (hash ppk (hash pms cr sr)))
      (send (hash ppk (hash pms cr sr)))))
  (label 165)
  (parent 161)
  (unrealized (0 6) (3 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr cr-0 sr-0 cr-1 sr-1 random32)
    (pms pms-0 random48) (ppk skey) (spk spk-0 akey)
    (u ca u-0 s ca-0 name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk-0) (s s) (ca ca-0))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-1) (sr sr-1) (pms pms-0) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk-0) (u u-0) (s s) (ca ca-0))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((1 1) (0 1)) ((2 7) (0 4))
    ((3 1) (0 1)) ((3 3) (0 3)) ((3 5) (2 5)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cookie cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (facts (neq u-0 s))
  (leads-to ((2 7) (0 4)))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (displaced 2 4 servera 6)
    (enc cookie (hash ppk (hash pms cr sr))) (3 5))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0)
      (send (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0)))))
    ((send cr-1) (recv (cat sr-1 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write")))))
  (label 166)
  (parent 162)
  (unrealized (0 6) (2 5) (3 4))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr cr-0 sr-0 cr-1 sr-1 random32)
    (pms pms-0 random48) (ppk skey) (spk spk-0 akey) (u s ca ca-0 name)
    (pt pt-0 pval) (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (defstrand serverr 4 (cr cr) (sr sr) (pms pms) (spk spk) (s s)
    (ca ca))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-1) (sr sr-1) (pms pms-0) (spk spk-0) (u u)
    (s s) (ca ca-0) (cookiestor cookiestor))
  (deflistener (hash ppk (hash pms cr sr)))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 1) (0 1)) ((2 1) (0 1))
    ((2 3) (0 3)) ((3 7) (0 4)) ((4 1) (3 5)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (leads-to ((3 7) (0 4)))
  (rule trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash ppk (hash pms cr sr)))
    (enc cookie (hash ppk (hash pms cr sr))) (3 5))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv cr) (send (cat sr s spk (enc (hash s spk) (privk ca))))
      (recv
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write"))))
    ((send cr-1)
      (recv (cat sr-1 s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms-0 spk-0)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms-0 spk-0)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms-0 spk-0)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms-0 spk-0)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv (hash ppk (hash pms cr sr)))
      (send (hash ppk (hash pms cr sr)))))
  (label 167)
  (parent 162)
  (unrealized (0 6) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (cookie data) (response httpdata) (request httpreq)
    (cr sr cr-0 sr-0 random32) (pms random48) (ppk skey) (spk akey)
    (u s ca name) (pt pval) (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk) (s s) (ca ca))
  (deflistener (hash (hash pms cr sr) "server_write"))
  (deflistener (cat (hash pms cr sr) "server_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 2) (4 0)) ((1 1) (0 1)) ((2 1) (0 3)) ((3 1) (2 0))
    ((4 1) (3 0)))
  (non-orig ppk (invk spk) (privk ca))
  (uniq-orig cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (3 0))
  (traces
    ((send cr) (recv (cat sr s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms spk)
          (enc
            (hash pms "client finished"
              (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms spk)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms spk)
              (enc
                (hash pms "client finished"
                  (hash cr sr (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms spk)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0) (send (cat sr-0 s spk (enc (hash s spk) (privk ca)))))
    ((recv (hash (hash pms cr sr) "server_write"))
      (send (hash (hash pms cr sr) "server_write")))
    ((recv (cat (hash pms cr sr) "server_write"))
      (send (cat (hash pms cr sr) "server_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 168)
  (parent 163)
  (unrealized (0 4) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr cr-0 sr-0 random32) (pms pms-0 random48)
    (ppk skey) (spk spk-0 akey) (u ca u-0 s ca-0 name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-0) (sr sr-0) (pms pms-0) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk-0) (u u-0) (s s) (ca ca-0))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 7) (0 4)) ((2 1) (0 1))
    ((2 3) (0 3)) ((2 5) (1 5)) ((3 1) (2 4)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cookie cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (facts (neq u-0 s))
  (leads-to ((1 7) (0 4)))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "client_write"))
    (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")) (2 4))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((send cr-0) (recv (cat sr-0 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write"))))
  (label 169)
  (parent 164)
  (unrealized (0 6) (1 5) (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr cr-0 sr-0 cr-1 sr-1 random32)
    (pms pms-0 random48) (ppk skey) (spk spk-0 akey)
    (u ca u-0 s ca-0 name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk-0) (s s) (ca ca-0))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-1) (sr sr-1) (pms pms-0) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk-0) (u u-0) (s s) (ca ca-0))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((1 1) (0 1)) ((2 7) (0 4))
    ((3 1) (0 1)) ((3 3) (0 3)) ((3 5) (2 5)) ((4 1) (3 4)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cookie cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (facts (neq u-0 s))
  (leads-to ((2 7) (0 4)))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (hash (hash pms cr sr) "client_write"))
    (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")) (3 4))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0)
      (send (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0)))))
    ((send cr-1) (recv (cat sr-1 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write"))))
  (label 170)
  (parent 166)
  (unrealized (0 6) (2 5) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr cr-0 sr-0 random32) (pms pms-0 random48)
    (ppk skey) (spk spk-0 akey) (u ca u-0 s ca-0 name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-0) (sr sr-0) (pms pms-0) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk-0) (u u-0) (s s) (ca ca-0))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((1 7) (0 4)) ((2 1) (0 1))
    ((2 3) (0 3)) ((2 5) (1 5)) ((3 1) (2 4)) ((4 1) (3 0)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cookie cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (facts (neq u-0 s))
  (leads-to ((1 7) (0 4)))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "client_write"))
    (hash (hash pms cr sr) "client_write") (3 0))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((send cr-0) (recv (cat sr-0 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write"))))
  (label 171)
  (parent 169)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr cr-0 sr-0 cr-1 sr-1 random32)
    (pms pms-0 random48) (ppk skey) (spk spk-0 akey)
    (u ca u-0 s ca-0 name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk-0) (s s) (ca ca-0))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-1) (sr sr-1) (pms pms-0) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk-0) (u u-0) (s s) (ca ca-0))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((1 1) (0 1)) ((2 7) (0 4))
    ((3 1) (0 1)) ((3 3) (0 3)) ((3 5) (2 5)) ((4 1) (3 4))
    ((5 1) (4 0)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cookie cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (facts (neq u-0 s))
  (leads-to ((2 7) (0 4)))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test
    (added-listener (cat (hash pms cr sr) "client_write"))
    (hash (hash pms cr sr) "client_write") (4 0))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0)
      (send (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0)))))
    ((send cr-1) (recv (cat sr-1 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write"))))
  (label 172)
  (parent 170)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr cr-0 sr-0 random32) (pms pms-0 random48)
    (ppk skey) (spk spk-0 akey) (u ca u-0 s ca-0 name) (pt pt-0 pval)
    (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-0) (sr sr-0) (pms pms-0) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk-0) (u u-0) (s s) (ca ca-0))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 2) (5 0)) ((1 7) (0 4))
    ((2 1) (0 1)) ((2 3) (0 3)) ((2 5) (1 5)) ((3 1) (2 4))
    ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cookie cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (facts (neq u-0 s))
  (leads-to ((1 7) (0 4)))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (4 0))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((send cr-0) (recv (cat sr-0 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-0 sr-0) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-0 sr-0 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-0 sr-0
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-0 sr-0) "client_write"))))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-0 sr-0) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-0 sr-0) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 173)
  (parent 171)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p p-0 password) (cr sr cr-0 sr-0 cr-1 sr-1 random32)
    (pms pms-0 random48) (ppk skey) (spk spk-0 akey)
    (u ca u-0 s ca-0 name) (pt pt-0 pval) (cookiestor locn))
  (defstrand clientr 7 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (response response) (request request) (cr cr) (sr sr) (pms pms)
    (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor))
  (defstrand serverr 2 (cr cr-0) (sr sr-0) (spk spk-0) (s s) (ca ca-0))
  (defstrand clienta 8 (cookie (enc cookie (hash ppk (hash pms cr sr))))
    (any any) (p p) (cr cr-1) (sr sr-1) (pms pms-0) (spk spk) (u u)
    (s s) (ca ca) (cookiestor cookiestor))
  (defstrand servera 6 (cookie cookie) (p p-0) (cr cr) (sr sr) (pms pms)
    (ppk ppk) (spk spk-0) (u u-0) (s s) (ca ca-0))
  (deflistener (hash (hash pms cr sr) "client_write"))
  (deflistener (cat (hash pms cr sr) "client_write"))
  (deflistener (cat pms cr sr))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((0 2) (6 0)) ((1 1) (0 1))
    ((2 7) (0 4)) ((3 1) (0 1)) ((3 3) (0 3)) ((3 5) (2 5))
    ((4 1) (3 4)) ((5 1) (4 0)) ((6 1) (5 0)))
  (non-orig ppk (invk spk-0) (privk ca-0))
  (uniq-orig cookie cr sr pms)
  (gen-st
    (cat "client store" u s (enc cookie (hash ppk (hash pms cr sr)))))
  (facts (neq u-0 s))
  (leads-to ((2 7) (0 4)))
  (rule fact-servera-neq0 trRl_clienta-at-6 trRl_clienta-at-7)
  (operation encryption-test (added-listener (cat pms cr sr))
    (hash pms cr sr) (5 0))
  (traces
    ((send cr) (recv (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (send
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (recv
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (load cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr)))))
      (send
        (enc (enc cookie (hash ppk (hash pms cr sr))) request
          (hash (hash pms cr sr) "client_write")))
      (recv (enc response (hash (hash pms cr sr) "server_write"))))
    ((recv cr-0)
      (send (cat sr-0 s spk-0 (enc (hash s spk-0) (privk ca-0)))))
    ((send cr-1) (recv (cat sr-1 s spk (enc (hash s spk) (privk ca))))
      (send
        (cat (enc pms-0 spk)
          (enc
            (hash pms-0 "client finished"
              (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
                (enc pms-0 spk)))
            (hash (hash pms-0 cr-1 sr-1) "client_write"))))
      (recv
        (enc
          (hash pms-0 "server finished"
            (hash cr-1 sr-1 (cat s spk (enc (hash s spk) (privk ca)))
              (enc pms-0 spk)
              (enc
                (hash pms-0 "client finished"
                  (hash cr-1 sr-1
                    (cat s spk (enc (hash s spk) (privk ca)))
                    (enc pms-0 spk)))
                (hash (hash pms-0 cr-1 sr-1) "client_write"))))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (send
        (enc "login" u p (hash (hash pms-0 cr-1 sr-1) "client_write")))
      (recv
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms-0 cr-1 sr-1) "server_write")))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor
        (cat pt "client store" u s
          (enc cookie (hash ppk (hash pms cr sr))))))
    ((recv cr) (send (cat sr s spk-0 (enc (hash s spk-0) (privk ca-0))))
      (recv
        (cat (enc pms spk-0)
          (enc
            (hash pms "client finished"
              (hash cr sr
                (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (enc pms spk-0)))
            (hash (hash pms cr sr) "client_write"))))
      (send
        (enc
          (hash pms "server finished"
            (hash cr sr (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc pms spk-0)
              (enc
                (hash pms "client finished"
                  (hash cr sr
                    (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
                    (enc pms spk-0)))
                (hash (hash pms cr sr) "client_write"))))
          (hash (hash pms cr sr) "server_write")))
      (recv
        (enc "login" u-0 p-0 (hash (hash pms cr sr) "client_write")))
      (send
        (enc "login-successful" (enc cookie (hash ppk (hash pms cr sr)))
          (hash (hash pms cr sr) "server_write"))))
    ((recv (hash (hash pms cr sr) "client_write"))
      (send (hash (hash pms cr sr) "client_write")))
    ((recv (cat (hash pms cr sr) "client_write"))
      (send (cat (hash pms cr sr) "client_write")))
    ((recv (cat pms cr sr)) (send (cat pms cr sr))))
  (label 174)
  (parent 172)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(comment "Nothing left to do")
